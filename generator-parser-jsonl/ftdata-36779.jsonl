{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file", "license": "IBM", "module": "community.general.read_csv", "output": "      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n", "path": "dynamic-inventory-v2.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add dynamic inventory", "license": "IBM", "module": "ansible.controller.inventory", "output": "      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n", "path": "dynamic-inventory-v2.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add dynamic inventory\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory", "license": "IBM", "module": "ansible.builtin.debug", "output": "      ansible.builtin.debug:\n        var: inventory_result\n", "path": "dynamic-inventory-v2.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add dynamic inventory\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Add Linux hosts to the dynamic inventory in AAP", "license": "IBM", "module": "ansible.controller.host", "output": "      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n", "path": "dynamic-inventory-v2.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add dynamic inventory\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Add Linux hosts to the dynamic inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add Windows hosts to the dynamic inventory in AAP", "license": "IBM", "module": "ansible.controller.host", "output": "      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n", "path": "dynamic-inventory-v2.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add dynamic inventory\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Add Linux hosts to the dynamic inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add Windows hosts to the dynamic inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add dynamic job template to AAP", "license": "IBM", "module": "ansible.controller.job_template", "output": "      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n", "path": "dynamic-inventory-v2.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add dynamic inventory\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Add Linux hosts to the dynamic inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add Windows hosts to the dynamic inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add dynamic job template to AAP\n      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n\n    - name: Launch job in AAP", "license": "IBM", "module": "ansible.controller.job_launch", "output": "      ansible.controller.job_launch:\n        job_template: '{{ job_template_name }}'\n      register: job\n", "path": "dynamic-inventory-v2.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add dynamic inventory\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Add Linux hosts to the dynamic inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add Windows hosts to the dynamic inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add dynamic job template to AAP\n      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n\n    - name: Launch job in AAP\n      ansible.controller.job_launch:\n        job_template: '{{ job_template_name }}'\n      register: job\n\n    - name: Wait for job to be ended", "license": "IBM", "module": "ansible.controller.job_wait", "output": "      ansible.controller.job_wait:\n        job_id: \"{{ job.id }}\"\n        timeout: 120\n      register: job_wait\n", "path": "dynamic-inventory-v2.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add dynamic inventory\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Add Linux hosts to the dynamic inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add Windows hosts to the dynamic inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add dynamic job template to AAP\n      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n\n    - name: Launch job in AAP\n      ansible.controller.job_launch:\n        job_template: '{{ job_template_name }}'\n      register: job\n\n    - name: Wait for job to be ended\n      ansible.controller.job_wait:\n        job_id: \"{{ job.id }}\"\n        timeout: 120\n      register: job_wait\n\n    - name: Display job status", "license": "IBM", "module": "ansible.builtin.debug", "output": "      ansible.builtin.debug:\n        msg: \"Job {{ job.id }} status: {{ job_wait.status }}\"", "path": "dynamic-inventory-v2.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file", "license": "IBM", "module": "community.general.read_csv", "output": "      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n", "path": "dynamic-inventory-v3.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Create dynamic inventory in AAP", "license": "IBM", "module": "ansible.controller.inventory", "output": "      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n", "path": "dynamic-inventory-v3.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Create dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory", "license": "IBM", "module": "ansible.builtin.debug", "output": "      ansible.builtin.debug:\n        var: inventory_result\n", "path": "dynamic-inventory-v3.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Create dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Include Linux hosts to the inventory in AAP", "license": "IBM", "module": "ansible.controller.host", "output": "      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n", "path": "dynamic-inventory-v3.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Create dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Include Linux hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Include Windows hosts to the inventory in AAP", "license": "IBM", "module": "ansible.controller.host", "output": "      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n", "path": "dynamic-inventory-v3.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Create dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Include Linux hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Include Windows hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Create job template to AAP", "license": "IBM", "module": "ansible.controller.job_template", "output": "      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n", "path": "dynamic-inventory-v3.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Create dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Include Linux hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Include Windows hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Create job template to AAP\n      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n\n    - name: Run job in AAP", "license": "IBM", "module": "ansible.controller.job_launch", "output": "      ansible.controller.job_launch:\n        job_template: '{{ job_template_name }}'\n      register: job\n", "path": "dynamic-inventory-v3.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Create dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Include Linux hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Include Windows hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Create job template to AAP\n      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n\n    - name: Run job in AAP\n      ansible.controller.job_launch:\n        job_template: '{{ job_template_name }}'\n      register: job\n\n    - name: Wait for job to be ended", "license": "IBM", "module": "ansible.controller.job_wait", "output": "      ansible.controller.job_wait:\n        job_id: \"{{ job.id }}\"\n        timeout: 120\n      register: job_wait\n", "path": "dynamic-inventory-v3.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Create dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Include Linux hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Include Windows hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Create job template to AAP\n      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n\n    - name: Run job in AAP\n      ansible.controller.job_launch:\n        job_template: '{{ job_template_name }}'\n      register: job\n\n    - name: Wait for job to be ended\n      ansible.controller.job_wait:\n        job_id: \"{{ job.id }}\"\n        timeout: 120\n      register: job_wait\n\n    - name: Display job status", "license": "IBM", "module": "ansible.builtin.debug", "output": "      ansible.builtin.debug:\n        msg: \"Job {{ job.id }} status: {{ job_wait.status }}\"", "path": "dynamic-inventory-v3.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file", "license": "IBM", "module": "community.general.read_csv", "output": "      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n", "path": "dynamic-inventory-v4.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Generate dynamic inventory in AAP", "license": "IBM", "module": "ansible.controller.inventory", "output": "      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n", "path": "dynamic-inventory-v4.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Generate dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory", "license": "IBM", "module": "ansible.builtin.debug", "output": "      ansible.builtin.debug:\n        var: inventory_result\n", "path": "dynamic-inventory-v4.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Generate dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Incorporate Linux hosts to the inventory in AAP", "license": "IBM", "module": "ansible.controller.host", "output": "      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n", "path": "dynamic-inventory-v4.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Generate dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Incorporate Linux hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Incorporate Windows hosts to the inventory in AAP", "license": "IBM", "module": "ansible.controller.host", "output": "      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n", "path": "dynamic-inventory-v4.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Generate dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Incorporate Linux hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Incorporate Windows hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Generate job template to AAP", "license": "IBM", "module": "ansible.controller.job_template", "output": "      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n", "path": "dynamic-inventory-v4.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Generate dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Incorporate Linux hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Incorporate Windows hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Generate job template to AAP\n      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n\n    - name: Execute job in AAP", "license": "IBM", "module": "ansible.controller.job_launch", "output": "      ansible.controller.job_launch:\n        job_template: '{{ job_template_name }}'\n      register: job\n", "path": "dynamic-inventory-v4.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Generate dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Incorporate Linux hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Incorporate Windows hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Generate job template to AAP\n      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n\n    - name: Execute job in AAP\n      ansible.controller.job_launch:\n        job_template: '{{ job_template_name }}'\n      register: job\n\n    - name: Wait for job to be ended", "license": "IBM", "module": "ansible.controller.job_wait", "output": "      ansible.controller.job_wait:\n        job_id: \"{{ job.id }}\"\n        timeout: 120\n      register: job_wait\n", "path": "dynamic-inventory-v4.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Generate dynamic inventory in AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Incorporate Linux hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Incorporate Windows hosts to the inventory in AAP\n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Generate job template to AAP\n      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n\n    - name: Execute job in AAP\n      ansible.controller.job_launch:\n        job_template: '{{ job_template_name }}'\n      register: job\n\n    - name: Wait for job to be ended\n      ansible.controller.job_wait:\n        job_id: \"{{ job.id }}\"\n        timeout: 120\n      register: job_wait\n\n    - name: Display job status", "license": "IBM", "module": "ansible.builtin.debug", "output": "      ansible.builtin.debug:\n        msg: \"Job {{ job.id }} status: {{ job_wait.status }}\"", "path": "dynamic-inventory-v4.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file", "license": "IBM", "module": "community.general.read_csv", "output": "      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n", "path": "dynamic-inventory.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add inventory to AAP", "license": "IBM", "module": "ansible.controller.inventory", "output": "      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n", "path": "dynamic-inventory.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add inventory to AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory", "license": "IBM", "module": "ansible.builtin.debug", "output": "      ansible.builtin.debug:\n        var: inventory_result\n", "path": "dynamic-inventory.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add inventory to AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Add Linux hosts to the inventory ", "license": "IBM", "module": "ansible.controller.host", "output": "      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n", "path": "dynamic-inventory.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add inventory to AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Add Linux hosts to the inventory \n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add Windows hosts to the inventory ", "license": "IBM", "module": "ansible.controller.host", "output": "      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n", "path": "dynamic-inventory.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add inventory to AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Add Linux hosts to the inventory \n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add Windows hosts to the inventory \n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add job template to AAP", "license": "IBM", "module": "ansible.controller.job_template", "output": "      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n", "path": "dynamic-inventory.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add inventory to AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Add Linux hosts to the inventory \n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add Windows hosts to the inventory \n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add job template to AAP\n      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n\n    - name: Launch job", "license": "IBM", "module": "ansible.controller.job_launch", "output": "      ansible.controller.job_launch:\n        job_template: '{{ job_template_name }}'\n      register: job\n", "path": "dynamic-inventory.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add inventory to AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Add Linux hosts to the inventory \n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add Windows hosts to the inventory \n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add job template to AAP\n      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n\n    - name: Launch job\n      ansible.controller.job_launch:\n        job_template: '{{ job_template_name }}'\n      register: job\n\n    - name: Wait for job", "license": "IBM", "module": "ansible.controller.job_wait", "output": "      ansible.controller.job_wait:\n        job_id: \"{{ job.id }}\"\n        timeout: 120\n      register: job_wait\n", "path": "dynamic-inventory.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
{"data_source_description": "Ansible modules collection for AAP Config As Code", "input": "---\n- name: Winrm/ssh ping and config as code to manage dynamic Red Hat Ansible Automation Platform AAP inventories\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ansible.controller.inventory:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n      organization: '{{ default_org }}'\n    ansible.controller.host:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_template:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_launch:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n    ansible.controller.job_wait:\n      controller_host: '{{ controller_host }}'\n      controller_username: '{{ controller_username }}'\n      controller_password: '{{ controller_password }}'\n      validate_certs: '{{ validate_certs }}'\n\n  tasks:\n    - name: Read the input CSV file\n      community.general.read_csv:\n        path: '{{ csv_file }}'\n      register: csv_list\n      delegate_to: localhost\n      vars:\n        ansible_connection: local\n\n    - name: Add inventory to AAP\n      ansible.controller.inventory:\n        name: \"{{ inventory_name }}\"\n        organization: '{{ default_org }}'\n        state: present\n      register: inventory_result\n\n    - name: Display the inventory\n      ansible.builtin.debug:\n        var: inventory_result\n\n    - name: Add Linux hosts to the inventory \n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n      when: item.connection == \"ssh\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add Windows hosts to the inventory \n      ansible.controller.host:\n        name: \"{{ item.server }}\"\n        inventory: \"{{ inventory_name }}\"\n        state: present\n        enabled: true\n        variables:\n          ansible_connection: \"{{ item.connection }}\"\n          ansible_user: \"{{ item.user }}\"\n          ansible_password: \"{{ item.password }}\"\n          ansible_winrm_server_cert_validation: ignore\n          ansible_shell_type: powershell\n      when: item.connection == \"winrm\"\n      loop: \"{{ csv_list.list }}\"\n\n    - name: Add job template to AAP\n      ansible.controller.job_template:\n        name: '{{ job_template_name }}'\n        job_type: \"run\"\n        organization: '{{ default_org }}'\n        inventory: \"{{ inventory_name }}\"\n        project: '{{ project_name }}'\n        playbook: \"use_case_5/{{ job_template_name }}.yml\"\n        state: \"present\"\n\n    - name: Launch job\n      ansible.controller.job_launch:\n        job_template: '{{ job_template_name }}'\n      register: job\n\n    - name: Wait for job\n      ansible.controller.job_wait:\n        job_id: \"{{ job.id }}\"\n        timeout: 120\n      register: job_wait\n\n    - name: Display job status", "license": "IBM", "module": "ansible.builtin.debug", "output": "      ansible.builtin.debug:\n        msg: \"Job {{ job.id }} status: {{ job_wait.status }}\"", "path": "dynamic-inventory.yml", "repo_name": "Red Hat Config As Code Ansible Collections", "repo_url": "https://gitlab.cagip-wca.mop.ibm/cagip-wca4al/cagip-wca-for-ansible-lightspeed/-/tree/main/use_case_5/training/playbooks"}
