{
    "py/object": "sage_scan.models.Project",
    "type": "project",
    "key": "project {\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "name": "repository",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": null,
    "filepath": "repository/",
    "my_collection_name": "",
    "playbooks": [
        "playbook playbook:rag_agent_1.yml",
        "playbook playbook:rag_agent_2.yml",
        "playbook playbook:rag_agent_3.yml",
        "playbook playbook:rag_agent_4.yml",
        "playbook playbook:rag_agent_5.yml",
        "playbook playbook:rag_document_1.yml",
        "playbook playbook:rag_document_2.yml",
        "playbook playbook:rag_document_3.yml",
        "playbook playbook:rag_document_4.yml",
        "playbook playbook:rag_document_5.yml",
        "playbook playbook:rag_document_defaults.yml"
    ],
    "roles": [],
    "target_playbook_path": "",
    "target_taskfile_path": "",
    "requirements": {},
    "installed_collections_path": "",
    "installed_collections": [],
    "installed_roles_path": "",
    "installed_roles": [],
    "modules": [],
    "taskfiles": [],
    "inventories": [],
    "files": [
        {
            "py/object": "ansible_risk_insight.models.File",
            "type": "file",
            "name": "my_module_defaults.yml",
            "key": "file file:my_module_defaults.yml",
            "local_key": "file file:my_module_defaults.yml",
            "role": "",
            "collection": "",
            "body": "  my_module_defaults:\n      rag_api_base_url: \"{{ rag_api_base_url }}\"\n      rag_username_api: \"{{ rag_username_api }}\"\n      rag_password_api: \"{{ rag_password_api }}\"\n      rag_api_key: \"{{ rag_api_key }}\"\n",
            "data": "{\"my_module_defaults\":{\"rag_api_base_url\":\"{{ rag_api_base_url }}\",\"rag_username_api\":\"{{ rag_username_api }}\",\"rag_password_api\":\"{{ rag_password_api }}\",\"rag_api_key\":\"{{ rag_api_key }}\"}}",
            "encrypted": false,
            "error": "",
            "label": "others",
            "defined_in": "my_module_defaults.yml",
            "annotations": {}
        }
    ],
    "version": ""
}
{
    "py/object": "sage_scan.models.Playbook",
    "type": "playbook",
    "key": "playbook playbook:rag_agent_1.yml",
    "name": "rag_agent_1.yml",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_agent_1.yml",
    "yaml_lines": "---\n- name: Specific API agentx - Manage Artificial Intelligence (AI) assistant agents in a Retrieval-Augmented Generation (RAG) framework\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ibm.ce_emea_rag.rag_agent:\n      rag_api_base_url: \"{{ rag_api_base_url }}\"\n      rag_api_key: \"{{ rag_api_key }}\"  \n  tasks:\n    - name: Specific API agentx. Get a list of AI assistant agents in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        method: LIST\n      register: get_result\n\n    - name: Display the list of RAG agents\n      debug:\n        var: get_result.json_payload\n\n    - name: Specific API agentx. Create an AI assistant agent in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        agent_name: \"{{ agent_name }}\"\n        method: CREATE\n      register: create_result\n\n    - name: Display the output of Create a RAG agent\n      debug:\n        var: create_result.json_payload\n\n    - name: Specific API agentx. Update an AI assistant agent in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        agent_name: \"{{ agent_name }}\"\n        method: UPDATE\n      register: update_result\n\n    - name: Display the output of Create an AI assistant agent\n      debug:\n        var: update_result.json_payload\n\n    - name: Specific API agentx. Get an AI assistant agentt by its ID in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n\n    - name: Display the agent info\n      debug:\n        var: get_by_id_result.json_payload\n\n    - name: Specific API agentx. Delete an AI assistant agent by its ID in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: DELETE\n      register: delete_result\n\n    - name: Display the delete agent result\n      debug:\n        var: delete_result.json_payload\n\n",
    "role": "",
    "collection": "",
    "plays": [
        "play playbook:rag_agent_1.yml#play:[0]"
    ],
    "options": {}
}
{
    "py/object": "sage_scan.models.Playbook",
    "type": "playbook",
    "key": "playbook playbook:rag_agent_2.yml",
    "name": "rag_agent_2.yml",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_agent_2.yml",
    "yaml_lines": "---\n- name: Specific API agentx - Manage Artificial Intelligence (AI) assistant agents within a Retrieval-Augmented Generation (RAG) system\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ibm.ce_emea_rag.rag_agent:\n      rag_api_base_url: \"{{ rag_api_base_url }}\"\n      rag_api_key: \"{{ rag_api_key }}\"  \n  tasks:\n\n\n    - name: Specific API agentx. Get a list of AI assistant agents within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        method: LIST\n      register: get_result\n\n    - name: Display the list of RAG agents\n      debug:\n        var: get_result.json_payload\n\n    - name: Specific API agentx. Create an AI assistant agent within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        agent_name: \"{{ agent_name }}\"\n        method: CREATE\n      register: create_result\n\n    - name: Display the output of Create a RAG agent\n      debug:\n        var: create_result.json_payload\n\n    - name: Specific API agentx. Update an AI assistant agent within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        agent_name: \"{{ agent_name }}\"\n        method: UPDATE\n      register: update_result\n\n    - name: Display the output of Create an AI assistant agen\n      debug:\n        var: update_result.json_payload\n\n    - name: Specific API agentx. Get an AI assistant agen by its ID within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n\n    - name: Display the agent info\n      debug:\n        var: get_by_id_result.json_payload\n\n    - name: Specific API agentx. Delete an AI assistant agen by its ID within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: DELETE\n      register: delete_result\n\n    - name: Display the delete agent result\n      debug:\n        var: delete_result.json_payload\n\n",
    "role": "",
    "collection": "",
    "plays": [
        "play playbook:rag_agent_2.yml#play:[0]"
    ],
    "options": {}
}
{
    "py/object": "sage_scan.models.Playbook",
    "type": "playbook",
    "key": "playbook playbook:rag_agent_3.yml",
    "name": "rag_agent_3.yml",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_agent_3.yml",
    "yaml_lines": "---\n- name: Specific API agentx - Manage Artificial Intelligence (AI) assistant agents in a Retrieval-Augmented Generation (RAG) architecture\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ibm.ce_emea_rag.rag_agent:\n      rag_api_base_url: \"{{ rag_api_base_url }}\"\n      rag_api_key: \"{{ rag_api_key }}\"  \n  tasks:\n\n\n    - name: Specific API agentx. Get a list of AI assistant agents in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        method: LIST\n      register: get_result\n\n    - name: Display the list of RAG agents\n      debug:\n        var: get_result.json_payload\n\n    - name: Specific API agentx. Create an AI assistant agent in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        agent_name: \"{{ agent_name }}\"\n        method: CREATE\n      register: create_result\n\n    - name: Display the output of Create a RAG agent\n      debug:\n        var: create_result.json_payload\n\n    - name: Specific API agentx. Update an AI assistant agent in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        agent_name: \"{{ agent_name }}\"\n        method: UPDATE\n      register: update_result\n\n    - name: Display the output of Create an AI assistant agen\n      debug:\n        var: update_result.json_payload\n\n    - name: Specific API agentx. Get an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n\n    - name: Display the agent info\n      debug:\n        var: get_by_id_result.json_payload\n\n    - name: Specific API agentx. Delete an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: DELETE\n      register: delete_result\n\n    - name: Display the delete agent result\n      debug:\n        var: delete_result.json_payload\n\n",
    "role": "",
    "collection": "",
    "plays": [
        "play playbook:rag_agent_3.yml#play:[0]"
    ],
    "options": {}
}
{
    "py/object": "sage_scan.models.Playbook",
    "type": "playbook",
    "key": "playbook playbook:rag_agent_4.yml",
    "name": "rag_agent_4.yml",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_agent_4.yml",
    "yaml_lines": "---\n- name: Specific API agentx - Manage Artificial Intelligence (AI) assistant agents into a Retrieval-Augmented Generation (RAG) structure\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ibm.ce_emea_rag.rag_agent:\n      rag_api_base_url: \"{{ rag_api_base_url }}\"\n      rag_api_key: \"{{ rag_api_key }}\"  \n  tasks:\n\n\n    - name: Get a list of AI assistant agents into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        method: LIST\n      register: get_result\n\n    - name: Display the list of RAG agents\n      debug:\n        var: get_result.json_payload\n\n    - name: Create an AI assistant agent into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        agent_name: \"{{ agent_name }}\"\n        method: CREATE\n      register: create_result\n\n    - name: Display the output of Create a RAG agent\n      debug:\n        var: create_result.json_payload\n\n    - name: Update an AI assistant agent into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        agent_name: \"{{ agent_name }}\"\n        method: UPDATE\n      register: update_result\n\n    - name: Display the output of Create an AI assistant agen\n      debug:\n        var: update_result.json_payload\n\n    - name: Get an AI assistant agen by its ID into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n\n    - name: Display the agent info\n      debug:\n        var: get_by_id_result.json_payload\n\n    - name: Delete an AI assistant agen by its ID into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: DELETE\n      register: delete_result\n\n    - name: Display the delete agent result\n      debug:\n        var: delete_result.json_payload\n\n",
    "role": "",
    "collection": "",
    "plays": [
        "play playbook:rag_agent_4.yml#play:[0]"
    ],
    "options": {}
}
{
    "py/object": "sage_scan.models.Playbook",
    "type": "playbook",
    "key": "playbook playbook:rag_agent_5.yml",
    "name": "rag_agent_5.yml",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_agent_5.yml",
    "yaml_lines": "---\n- name: Specific API agentx - Manage Artificial Intelligence (AI) assistant agents in a Retrieval-Augmented Generation (RAG) setup\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ibm.ce_emea_rag.rag_agent:\n      rag_api_base_url: \"{{ rag_api_base_url }}\"\n      rag_api_key: \"{{ rag_api_key }}\"  \n  tasks:\n\n\n    - name: Specific API agentx. Get a list of AI assistant agents in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        method: LIST\n      register: get_result\n\n    - name: Display the list of RAG agents\n      debug:\n        var: get_result.json_payload\n\n    - name: Specific API agentx. Create an AI assistant agent in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        agent_name: \"{{ agent_name }}\"\n        method: CREATE\n      register: create_result\n\n    - name: Display the output of Create a RAG agent\n      debug:\n        var: create_result.json_payload\n\n    - name: Specific API agentx. Update an AI assistant agent in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        agent_name: \"{{ agent_name }}\"\n        method: UPDATE\n      register: update_result\n\n    - name: Display the output of Create an AI assistant agen\n      debug:\n        var: update_result.json_payload\n\n    - name: Specific API agentx. Get an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n\n    - name: Display the agent info\n      debug:\n        var: get_by_id_result.json_payload\n\n    - name: Specific API agentx. Delete an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: DELETE\n      register: delete_result\n\n    - name: Display the delete agent result\n      debug:\n        var: delete_result.json_payload\n\n",
    "role": "",
    "collection": "",
    "plays": [
        "play playbook:rag_agent_5.yml#play:[0]"
    ],
    "options": {}
}
{
    "py/object": "sage_scan.models.Playbook",
    "type": "playbook",
    "key": "playbook playbook:rag_document_1.yml",
    "name": "rag_document_1.yml",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_document_1.yml",
    "yaml_lines": "---\n- name: Specific API agentx - Manage documents in a Retrieval-Augmented Generation (RAG) framework\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ibm.ce_emea_rag.rag_document:\n      rag_api_base_url: \"{{ rag_api_base_url }}\"\n      rag_username_api: \"{{ rag_username_api }}\"\n      rag_password_api: \"{{ rag_password_api }}\"\n      rag_api_key: \"{{ rag_api_key }}\"\n\n  tasks:\n\n\n    - name: Specific API agentx. Get a list of documents in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        method: LIST\n      register: get_result\n\n    - name: Display the list of RAG documents\n      debug:\n        var: get_result.json_payload\n\n    - name: Specific API agentx. Get or Retrieve a document by its ID in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ get_result.json_payload[0].id  }}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n\n    - name: Display the RAG document info\n      debug:\n        var: get_by_id_result.json_payload\n\n\n    - name: Specific API agentx. Embed a document in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_file_name: Red_Hat_Partner Training_Portal_User_Guide.pdf\n        rag_file_url: http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf\n        rag_chunk_overlap: 300\n        rag_chunk_size: 800\n        rag_keep_files: false\n        method: CREATE\n      register: create_result\n\n    - name: Specific API agentx. Display the output of the document ingestion\n      debug:\n        var: create_result.json_payload\n\n    - pause:\n        prompt: \"Do you want to continue(yes/no)?\"\n      register: my_pause\n      delegate_to: localhost\n\n\n    - name: Specific API agentx. Remove or Delete a document by its ID in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ create_result.json_payload.id }}\"\n        method: DELETE\n      register: delete_result\n\n    - name: Display the delete document result\n      debug:\n        var: delete_result.json_payload\n\n\n\n\n\n",
    "role": "",
    "collection": "",
    "plays": [
        "play playbook:rag_document_1.yml#play:[0]"
    ],
    "options": {}
}
{
    "py/object": "sage_scan.models.Playbook",
    "type": "playbook",
    "key": "playbook playbook:rag_document_2.yml",
    "name": "rag_document_2.yml",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_document_2.yml",
    "yaml_lines": "---\n- name: Specific API agentx - Manage documents within a Retrieval-Augmented Generation (RAG) system\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ibm.ce_emea_rag.rag_document:\n      rag_api_base_url: \"{{ rag_api_base_url }}\"\n      rag_username_api: \"{{ rag_username_api }}\"\n      rag_password_api: \"{{ rag_password_api }}\"\n      rag_api_key: \"{{ rag_api_key }}\"\n\n  tasks:\n\n\n    - name: Get a list of documents within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        method: LIST\n      register: get_result\n\n    - name: Display the list of RAG documents\n      debug:\n        var: get_result.json_payload\n\n    - name: Get or Retrieve a document by its ID within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ get_result.json_payload[0].id  }}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n\n    - name: Display the RAG document info\n      debug:\n        var: get_by_id_result.json_payload\n\n\n    - name: Upload a document within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_file_name: Red_Hat_Partner Training_Portal_User_Guide.pdf\n        rag_file_url: http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf\n        rag_chunk_overlap: 150\n        rag_chunk_size: 400\n        rag_keep_files: false\n        method: CREATE\n      register: create_result\n\n    - name: Display the output of the document ingestion\n      debug:\n        var: create_result.json_payload\n\n    - pause:\n        prompt: \"Do you want to continue(yes/no)?\"\n      register: my_pause\n      delegate_to: localhost\n\n\n    - name: Remove or Delete a document by its ID within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ create_result.json_payload.id }}\"\n        method: DELETE\n      register: delete_result\n\n    - name: Display the delete document result\n      debug:\n        var: delete_result.json_payload\n\n\n\n\n\n",
    "role": "",
    "collection": "",
    "plays": [
        "play playbook:rag_document_2.yml#play:[0]"
    ],
    "options": {}
}
{
    "py/object": "sage_scan.models.Playbook",
    "type": "playbook",
    "key": "playbook playbook:rag_document_3.yml",
    "name": "rag_document_3.yml",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_document_3.yml",
    "yaml_lines": "---\n- name: Specific API agentx - Manage documents in a Retrieval-Augmented Generation (RAG) architecture\n  hosts: localhost\n  gather_facts: false\n  module_defaults:\n    ibm.ce_emea_rag.rag_document:\n      rag_api_base_url: \"{{ rag_api_base_url }}\"\n      rag_username_api: \"{{ rag_username_api }}\"\n      rag_password_api: \"{{ rag_password_api }}\"\n      rag_api_key: \"{{ rag_api_key }}\"\n\n  tasks:\n\n\n    - name: Get a list of documents in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        method: LIST\n      register: get_result\n\n    - name: Display the list of RAG documents\n      debug:\n        var: get_result.json_payload\n\n    - name: Get or Retrieve a document by its ID  in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ get_result.json_payload[0].id  }}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n\n    - name: Display the RAG document info\n      debug:\n        var: get_by_id_result.json_payload\n\n\n    - name: Transfer or Submit a document in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_file_name: Red_Hat_Partner Training_Portal_User_Guide.pdf\n        rag_file_url: http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf\n        rag_chunk_overlap: 150\n        rag_chunk_size: 400\n        rag_keep_files: false\n        method: CREATE\n      register: create_result\n\n    - name: Display the output of the document ingestion\n      debug:\n        var: create_result.json_payload\n\n    - pause:\n        prompt: \"Do you want to continue(yes/no)?\"\n      register: my_pause\n      delegate_to: localhost\n\n\n    - name: Remove or Delete a document by its ID in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ create_result.json_payload.id }}\"\n        method: DELETE\n      register: delete_result\n\n    - name: Display the delete document result\n      debug:\n        var: delete_result.json_payload\n\n\n\n\n\n",
    "role": "",
    "collection": "",
    "plays": [
        "play playbook:rag_document_3.yml#play:[0]"
    ],
    "options": {}
}
{
    "py/object": "sage_scan.models.Playbook",
    "type": "playbook",
    "key": "playbook playbook:rag_document_4.yml",
    "name": "rag_document_4.yml",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_document_4.yml",
    "yaml_lines": "---\n- name: Sample Ansible playbooks to manage documents into a Retrieval-Augmented Generation (RAG) structure\n  gather_facts: false\n  hosts: localhost\n  module_defaults:\n    ibm.ce_emea_rag.rag_document:\n      rag_api_base_url: \"{{ rag_api_base_url }}\"\n      rag_username_api: \"{{ rag_username_api }}\"\n      rag_password_api: \"{{ rag_password_api }}\"\n      rag_api_key: \"{{ rag_api_key }}\"\n\n  tasks:\n\n\n    - name: Get a list of documents into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        method: LIST\n      register: get_result\n\n    - name: Display the list of RAG documents\n      debug:\n        var: get_result.json_payload\n\n    - name: Get or Retrieve a document by its ID  into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ get_result.json_payload[0].id  }}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n\n    - name: Display the RAG document info\n      debug:\n        var: get_by_id_result.json_payload\n\n\n    - name: Transfer or Submit a document into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_file_name: Red_Hat_Partner Training_Portal_User_Guide.pdf\n        rag_file_url: http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf\n        rag_chunk_overlap: 150\n        rag_chunk_size: 400\n        rag_keep_files: false\n        method: CREATE\n      register: create_result\n\n    - name: Display the output of the document ingestion\n      debug:\n        var: create_result.json_payload\n\n    - pause:\n        prompt: \"Do you want to continue(yes/no)?\"\n      register: my_pause\n      delegate_to: localhost\n\n\n    - name: Remove or Delete a document by its ID into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ create_result.json_payload.id }}\"\n        method: DELETE\n      register: delete_result\n\n    - name: Display the delete document result\n      debug:\n        var: delete_result.json_payload\n\n\n\n\n\n",
    "role": "",
    "collection": "",
    "plays": [
        "play playbook:rag_document_4.yml#play:[0]"
    ],
    "options": {}
}
{
    "py/object": "sage_scan.models.Playbook",
    "type": "playbook",
    "key": "playbook playbook:rag_document_5.yml",
    "name": "rag_document_5.yml",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_document_5.yml",
    "yaml_lines": "---\n- name: Specific API agentx - Manage documents in a Retrieval-Augmented Generation (RAG) setup\n  gather_facts: false\n  hosts: localhost\n  module_defaults:\n    ibm.ce_emea_rag.rag_document:\n      rag_api_base_url: \"{{ rag_api_base_url }}\"\n      rag_username_api: \"{{ rag_username_api }}\"\n      rag_password_api: \"{{ rag_password_api }}\"\n      rag_api_key: \"{{ rag_api_key }}\"\n\n  tasks:\n\n    - name: Get a list of documents in a Retrieval-Augmented Generation (RAG) setup \n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        method: LIST\n      register: get_result\n\n    - name: Display the list of RAG documents\n      debug:\n        var: get_result.json_payload\n\n    - name: Get or Retrieve a document by its ID in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ get_result.json_payload[0].id  }}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n\n    - name: Display the RAG document info\n      debug:\n        var: get_by_id_result.json_payload\n\n\n    - name: Transfer or Submit a document in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_file_name: Red_Hat_Partner Training_Portal_User_Guide.pdf\n        rag_file_url: http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf\n        rag_chunk_overlap: 150\n        rag_chunk_size: 400\n        rag_keep_files: false\n        method: CREATE\n      register: create_result\n\n    - name: Display the output of the document ingestion\n      debug:\n        var: create_result.json_payload\n\n    - pause:\n        prompt: \"Do you want to continue(yes/no)?\"\n      register: my_pause\n      delegate_to: localhost\n\n\n    - name: Remove or Delete a document by its ID in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ create_result.json_payload.id }}\"\n        method: DELETE\n      register: delete_result\n\n    - name: Display the delete document result\n      debug:\n        var: delete_result.json_payload\n\n\n\n\n\n",
    "role": "",
    "collection": "",
    "plays": [
        "play playbook:rag_document_5.yml#play:[0]"
    ],
    "options": {}
}
{
    "py/object": "sage_scan.models.Playbook",
    "type": "playbook",
    "key": "playbook playbook:rag_document_defaults.yml",
    "name": "rag_document_defaults.yml",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_document_defaults.yml",
    "yaml_lines": "---\n- name: Sample RAG Ansible playbooks to manage RAG Documents\n  hosts: localhost\n  gather_facts: false\n  vars_files:\n    - my_module_defaults.yml\n    \n  module_defaults:\n    ibm.ce_emea_rag.rag_document: \"{{ my_module_defaults }}\"\n\n  tasks:\n\n    - name: Get a list of RAG documents\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: clxt6tle8000777c1ssbpf9b2\n        method: LIST\n      register: get_result\n\n    - name: Display the list of RAG documents\n      debug:\n        var: get_result.json_payload\n\n    - name: Get a RAG document by its ID\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: clxt6tle8000777c1ssbpf9b2\n        rag_document_id: \"{{ get_result.json_payload[0].id  }}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n\n    - name: Display the RAG document info\n      debug:\n        var: get_by_id_result.json_payload\n\n    - name: Create a RAG document\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: clxt6tle8000777c1ssbpf9b2\n        rag_file_name: Red_Hat_Partner Training_Portal_User_Guide.pdf\n        rag_file_url: http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf\n        rag_chunk_overlap: 150\n        rag_chunk_size: 400\n        rag_keep_files: false\n        method: CREATE\n      register: create_result\n\n    - name: Display the output of Create a RAG agent\n      debug:\n        var: create_result.json_payload\n\n    # - name: Delete a RAG document by its ID\n    #   ibm.ce_emea_rag.rag_document:\n    #     rag_agent_id: \"clxt6tle8000777c1ssbpf9b2\"\n    #     rag_document_id: \"clxvyxb5c006077c1bw48gknj\"\n    #     method: DELETE\n    #   register: delete_result\n\n    # - name: Display the delete document result\n    #   debug:\n    #     var: delete_result.json_payload\n\n\n\n\n\n",
    "role": "",
    "collection": "",
    "plays": [
        "play playbook:rag_document_defaults.yml#play:[0]"
    ],
    "options": {}
}
{
    "py/object": "sage_scan.models.Play",
    "type": "play",
    "key": "play playbook:rag_agent_1.yml#play:[0]",
    "name": "Specific API agentx - Manage Artificial Intelligence (AI) assistant agents in a Retrieval-Augmented Generation (RAG) framework",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_agent_1.yml",
    "index": 0,
    "role": "",
    "collection": "",
    "import_module": "",
    "import_playbook": "",
    "pre_tasks": [],
    "tasks": [
        "task playbook:rag_agent_1.yml#play:[0]#task:[0]",
        "task playbook:rag_agent_1.yml#play:[0]#task:[1]",
        "task playbook:rag_agent_1.yml#play:[0]#task:[2]",
        "task playbook:rag_agent_1.yml#play:[0]#task:[3]",
        "task playbook:rag_agent_1.yml#play:[0]#task:[4]",
        "task playbook:rag_agent_1.yml#play:[0]#task:[5]",
        "task playbook:rag_agent_1.yml#play:[0]#task:[6]",
        "task playbook:rag_agent_1.yml#play:[0]#task:[7]",
        "task playbook:rag_agent_1.yml#play:[0]#task:[8]",
        "task playbook:rag_agent_1.yml#play:[0]#task:[9]"
    ],
    "post_tasks": [],
    "roles": [],
    "module_defaults": {
        "ibm.ce_emea_rag.rag_agent": {
            "rag_api_base_url": "{{ rag_api_base_url }}",
            "rag_api_key": "{{ rag_api_key }}"
        }
    },
    "options": {
        "hosts": "localhost",
        "gather_facts": false
    },
    "collections_in_play": [],
    "become": null,
    "vars_files": [],
    "task_loading": {
        "total": 10,
        "success": 10,
        "failure": 0,
        "errors": []
    }
}
{
    "py/object": "sage_scan.models.Play",
    "type": "play",
    "key": "play playbook:rag_agent_2.yml#play:[0]",
    "name": "Specific API agentx - Manage Artificial Intelligence (AI) assistant agents within a Retrieval-Augmented Generation (RAG) system",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_agent_2.yml",
    "index": 0,
    "role": "",
    "collection": "",
    "import_module": "",
    "import_playbook": "",
    "pre_tasks": [],
    "tasks": [
        "task playbook:rag_agent_2.yml#play:[0]#task:[0]",
        "task playbook:rag_agent_2.yml#play:[0]#task:[1]",
        "task playbook:rag_agent_2.yml#play:[0]#task:[2]",
        "task playbook:rag_agent_2.yml#play:[0]#task:[3]",
        "task playbook:rag_agent_2.yml#play:[0]#task:[4]",
        "task playbook:rag_agent_2.yml#play:[0]#task:[5]",
        "task playbook:rag_agent_2.yml#play:[0]#task:[6]",
        "task playbook:rag_agent_2.yml#play:[0]#task:[7]",
        "task playbook:rag_agent_2.yml#play:[0]#task:[8]",
        "task playbook:rag_agent_2.yml#play:[0]#task:[9]"
    ],
    "post_tasks": [],
    "roles": [],
    "module_defaults": {
        "ibm.ce_emea_rag.rag_agent": {
            "rag_api_base_url": "{{ rag_api_base_url }}",
            "rag_api_key": "{{ rag_api_key }}"
        }
    },
    "options": {
        "hosts": "localhost",
        "gather_facts": false
    },
    "collections_in_play": [],
    "become": null,
    "vars_files": [],
    "task_loading": {
        "total": 10,
        "success": 10,
        "failure": 0,
        "errors": []
    }
}
{
    "py/object": "sage_scan.models.Play",
    "type": "play",
    "key": "play playbook:rag_agent_3.yml#play:[0]",
    "name": "Specific API agentx - Manage Artificial Intelligence (AI) assistant agents in a Retrieval-Augmented Generation (RAG) architecture",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_agent_3.yml",
    "index": 0,
    "role": "",
    "collection": "",
    "import_module": "",
    "import_playbook": "",
    "pre_tasks": [],
    "tasks": [
        "task playbook:rag_agent_3.yml#play:[0]#task:[0]",
        "task playbook:rag_agent_3.yml#play:[0]#task:[1]",
        "task playbook:rag_agent_3.yml#play:[0]#task:[2]",
        "task playbook:rag_agent_3.yml#play:[0]#task:[3]",
        "task playbook:rag_agent_3.yml#play:[0]#task:[4]",
        "task playbook:rag_agent_3.yml#play:[0]#task:[5]",
        "task playbook:rag_agent_3.yml#play:[0]#task:[6]",
        "task playbook:rag_agent_3.yml#play:[0]#task:[7]",
        "task playbook:rag_agent_3.yml#play:[0]#task:[8]",
        "task playbook:rag_agent_3.yml#play:[0]#task:[9]"
    ],
    "post_tasks": [],
    "roles": [],
    "module_defaults": {
        "ibm.ce_emea_rag.rag_agent": {
            "rag_api_base_url": "{{ rag_api_base_url }}",
            "rag_api_key": "{{ rag_api_key }}"
        }
    },
    "options": {
        "hosts": "localhost",
        "gather_facts": false
    },
    "collections_in_play": [],
    "become": null,
    "vars_files": [],
    "task_loading": {
        "total": 10,
        "success": 10,
        "failure": 0,
        "errors": []
    }
}
{
    "py/object": "sage_scan.models.Play",
    "type": "play",
    "key": "play playbook:rag_agent_4.yml#play:[0]",
    "name": "Specific API agentx - Manage Artificial Intelligence (AI) assistant agents into a Retrieval-Augmented Generation (RAG) structure",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_agent_4.yml",
    "index": 0,
    "role": "",
    "collection": "",
    "import_module": "",
    "import_playbook": "",
    "pre_tasks": [],
    "tasks": [
        "task playbook:rag_agent_4.yml#play:[0]#task:[0]",
        "task playbook:rag_agent_4.yml#play:[0]#task:[1]",
        "task playbook:rag_agent_4.yml#play:[0]#task:[2]",
        "task playbook:rag_agent_4.yml#play:[0]#task:[3]",
        "task playbook:rag_agent_4.yml#play:[0]#task:[4]",
        "task playbook:rag_agent_4.yml#play:[0]#task:[5]",
        "task playbook:rag_agent_4.yml#play:[0]#task:[6]",
        "task playbook:rag_agent_4.yml#play:[0]#task:[7]",
        "task playbook:rag_agent_4.yml#play:[0]#task:[8]",
        "task playbook:rag_agent_4.yml#play:[0]#task:[9]"
    ],
    "post_tasks": [],
    "roles": [],
    "module_defaults": {
        "ibm.ce_emea_rag.rag_agent": {
            "rag_api_base_url": "{{ rag_api_base_url }}",
            "rag_api_key": "{{ rag_api_key }}"
        }
    },
    "options": {
        "hosts": "localhost",
        "gather_facts": false
    },
    "collections_in_play": [],
    "become": null,
    "vars_files": [],
    "task_loading": {
        "total": 10,
        "success": 10,
        "failure": 0,
        "errors": []
    }
}
{
    "py/object": "sage_scan.models.Play",
    "type": "play",
    "key": "play playbook:rag_agent_5.yml#play:[0]",
    "name": "Specific API agentx - Manage Artificial Intelligence (AI) assistant agents in a Retrieval-Augmented Generation (RAG) setup",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_agent_5.yml",
    "index": 0,
    "role": "",
    "collection": "",
    "import_module": "",
    "import_playbook": "",
    "pre_tasks": [],
    "tasks": [
        "task playbook:rag_agent_5.yml#play:[0]#task:[0]",
        "task playbook:rag_agent_5.yml#play:[0]#task:[1]",
        "task playbook:rag_agent_5.yml#play:[0]#task:[2]",
        "task playbook:rag_agent_5.yml#play:[0]#task:[3]",
        "task playbook:rag_agent_5.yml#play:[0]#task:[4]",
        "task playbook:rag_agent_5.yml#play:[0]#task:[5]",
        "task playbook:rag_agent_5.yml#play:[0]#task:[6]",
        "task playbook:rag_agent_5.yml#play:[0]#task:[7]",
        "task playbook:rag_agent_5.yml#play:[0]#task:[8]",
        "task playbook:rag_agent_5.yml#play:[0]#task:[9]"
    ],
    "post_tasks": [],
    "roles": [],
    "module_defaults": {
        "ibm.ce_emea_rag.rag_agent": {
            "rag_api_base_url": "{{ rag_api_base_url }}",
            "rag_api_key": "{{ rag_api_key }}"
        }
    },
    "options": {
        "hosts": "localhost",
        "gather_facts": false
    },
    "collections_in_play": [],
    "become": null,
    "vars_files": [],
    "task_loading": {
        "total": 10,
        "success": 10,
        "failure": 0,
        "errors": []
    }
}
{
    "py/object": "sage_scan.models.Play",
    "type": "play",
    "key": "play playbook:rag_document_1.yml#play:[0]",
    "name": "Specific API agentx - Manage documents in a Retrieval-Augmented Generation (RAG) framework",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_document_1.yml",
    "index": 0,
    "role": "",
    "collection": "",
    "import_module": "",
    "import_playbook": "",
    "pre_tasks": [],
    "tasks": [
        "task playbook:rag_document_1.yml#play:[0]#task:[0]",
        "task playbook:rag_document_1.yml#play:[0]#task:[1]",
        "task playbook:rag_document_1.yml#play:[0]#task:[2]",
        "task playbook:rag_document_1.yml#play:[0]#task:[3]",
        "task playbook:rag_document_1.yml#play:[0]#task:[4]",
        "task playbook:rag_document_1.yml#play:[0]#task:[5]",
        "task playbook:rag_document_1.yml#play:[0]#task:[6]",
        "task playbook:rag_document_1.yml#play:[0]#task:[7]",
        "task playbook:rag_document_1.yml#play:[0]#task:[8]"
    ],
    "post_tasks": [],
    "roles": [],
    "module_defaults": {
        "ibm.ce_emea_rag.rag_document": {
            "rag_api_base_url": "{{ rag_api_base_url }}",
            "rag_username_api": "{{ rag_username_api }}",
            "rag_password_api": "{{ rag_password_api }}",
            "rag_api_key": "{{ rag_api_key }}"
        }
    },
    "options": {
        "hosts": "localhost",
        "gather_facts": false
    },
    "collections_in_play": [],
    "become": null,
    "vars_files": [],
    "task_loading": {
        "total": 9,
        "success": 9,
        "failure": 0,
        "errors": []
    }
}
{
    "py/object": "sage_scan.models.Play",
    "type": "play",
    "key": "play playbook:rag_document_2.yml#play:[0]",
    "name": "Specific API agentx - Manage documents within a Retrieval-Augmented Generation (RAG) system",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_document_2.yml",
    "index": 0,
    "role": "",
    "collection": "",
    "import_module": "",
    "import_playbook": "",
    "pre_tasks": [],
    "tasks": [
        "task playbook:rag_document_2.yml#play:[0]#task:[0]",
        "task playbook:rag_document_2.yml#play:[0]#task:[1]",
        "task playbook:rag_document_2.yml#play:[0]#task:[2]",
        "task playbook:rag_document_2.yml#play:[0]#task:[3]",
        "task playbook:rag_document_2.yml#play:[0]#task:[4]",
        "task playbook:rag_document_2.yml#play:[0]#task:[5]",
        "task playbook:rag_document_2.yml#play:[0]#task:[6]",
        "task playbook:rag_document_2.yml#play:[0]#task:[7]",
        "task playbook:rag_document_2.yml#play:[0]#task:[8]"
    ],
    "post_tasks": [],
    "roles": [],
    "module_defaults": {
        "ibm.ce_emea_rag.rag_document": {
            "rag_api_base_url": "{{ rag_api_base_url }}",
            "rag_username_api": "{{ rag_username_api }}",
            "rag_password_api": "{{ rag_password_api }}",
            "rag_api_key": "{{ rag_api_key }}"
        }
    },
    "options": {
        "hosts": "localhost",
        "gather_facts": false
    },
    "collections_in_play": [],
    "become": null,
    "vars_files": [],
    "task_loading": {
        "total": 9,
        "success": 9,
        "failure": 0,
        "errors": []
    }
}
{
    "py/object": "sage_scan.models.Play",
    "type": "play",
    "key": "play playbook:rag_document_3.yml#play:[0]",
    "name": "Specific API agentx - Manage documents in a Retrieval-Augmented Generation (RAG) architecture",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_document_3.yml",
    "index": 0,
    "role": "",
    "collection": "",
    "import_module": "",
    "import_playbook": "",
    "pre_tasks": [],
    "tasks": [
        "task playbook:rag_document_3.yml#play:[0]#task:[0]",
        "task playbook:rag_document_3.yml#play:[0]#task:[1]",
        "task playbook:rag_document_3.yml#play:[0]#task:[2]",
        "task playbook:rag_document_3.yml#play:[0]#task:[3]",
        "task playbook:rag_document_3.yml#play:[0]#task:[4]",
        "task playbook:rag_document_3.yml#play:[0]#task:[5]",
        "task playbook:rag_document_3.yml#play:[0]#task:[6]",
        "task playbook:rag_document_3.yml#play:[0]#task:[7]",
        "task playbook:rag_document_3.yml#play:[0]#task:[8]"
    ],
    "post_tasks": [],
    "roles": [],
    "module_defaults": {
        "ibm.ce_emea_rag.rag_document": {
            "rag_api_base_url": "{{ rag_api_base_url }}",
            "rag_username_api": "{{ rag_username_api }}",
            "rag_password_api": "{{ rag_password_api }}",
            "rag_api_key": "{{ rag_api_key }}"
        }
    },
    "options": {
        "hosts": "localhost",
        "gather_facts": false
    },
    "collections_in_play": [],
    "become": null,
    "vars_files": [],
    "task_loading": {
        "total": 9,
        "success": 9,
        "failure": 0,
        "errors": []
    }
}
{
    "py/object": "sage_scan.models.Play",
    "type": "play",
    "key": "play playbook:rag_document_4.yml#play:[0]",
    "name": "Sample Ansible playbooks to manage documents into a Retrieval-Augmented Generation (RAG) structure",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_document_4.yml",
    "index": 0,
    "role": "",
    "collection": "",
    "import_module": "",
    "import_playbook": "",
    "pre_tasks": [],
    "tasks": [
        "task playbook:rag_document_4.yml#play:[0]#task:[0]",
        "task playbook:rag_document_4.yml#play:[0]#task:[1]",
        "task playbook:rag_document_4.yml#play:[0]#task:[2]",
        "task playbook:rag_document_4.yml#play:[0]#task:[3]",
        "task playbook:rag_document_4.yml#play:[0]#task:[4]",
        "task playbook:rag_document_4.yml#play:[0]#task:[5]",
        "task playbook:rag_document_4.yml#play:[0]#task:[6]",
        "task playbook:rag_document_4.yml#play:[0]#task:[7]",
        "task playbook:rag_document_4.yml#play:[0]#task:[8]"
    ],
    "post_tasks": [],
    "roles": [],
    "module_defaults": {
        "ibm.ce_emea_rag.rag_document": {
            "rag_api_base_url": "{{ rag_api_base_url }}",
            "rag_username_api": "{{ rag_username_api }}",
            "rag_password_api": "{{ rag_password_api }}",
            "rag_api_key": "{{ rag_api_key }}"
        }
    },
    "options": {
        "gather_facts": false,
        "hosts": "localhost"
    },
    "collections_in_play": [],
    "become": null,
    "vars_files": [],
    "task_loading": {
        "total": 9,
        "success": 9,
        "failure": 0,
        "errors": []
    }
}
{
    "py/object": "sage_scan.models.Play",
    "type": "play",
    "key": "play playbook:rag_document_5.yml#play:[0]",
    "name": "Specific API agentx - Manage documents in a Retrieval-Augmented Generation (RAG) setup",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_document_5.yml",
    "index": 0,
    "role": "",
    "collection": "",
    "import_module": "",
    "import_playbook": "",
    "pre_tasks": [],
    "tasks": [
        "task playbook:rag_document_5.yml#play:[0]#task:[0]",
        "task playbook:rag_document_5.yml#play:[0]#task:[1]",
        "task playbook:rag_document_5.yml#play:[0]#task:[2]",
        "task playbook:rag_document_5.yml#play:[0]#task:[3]",
        "task playbook:rag_document_5.yml#play:[0]#task:[4]",
        "task playbook:rag_document_5.yml#play:[0]#task:[5]",
        "task playbook:rag_document_5.yml#play:[0]#task:[6]",
        "task playbook:rag_document_5.yml#play:[0]#task:[7]",
        "task playbook:rag_document_5.yml#play:[0]#task:[8]"
    ],
    "post_tasks": [],
    "roles": [],
    "module_defaults": {
        "ibm.ce_emea_rag.rag_document": {
            "rag_api_base_url": "{{ rag_api_base_url }}",
            "rag_username_api": "{{ rag_username_api }}",
            "rag_password_api": "{{ rag_password_api }}",
            "rag_api_key": "{{ rag_api_key }}"
        }
    },
    "options": {
        "gather_facts": false,
        "hosts": "localhost"
    },
    "collections_in_play": [],
    "become": null,
    "vars_files": [],
    "task_loading": {
        "total": 9,
        "success": 9,
        "failure": 0,
        "errors": []
    }
}
{
    "py/object": "sage_scan.models.Play",
    "type": "play",
    "key": "play playbook:rag_document_defaults.yml#play:[0]",
    "name": "Sample RAG Ansible playbooks to manage RAG Documents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": {},
    "filepath": "rag_document_defaults.yml",
    "index": 0,
    "role": "",
    "collection": "",
    "import_module": "",
    "import_playbook": "",
    "pre_tasks": [],
    "tasks": [
        "task playbook:rag_document_defaults.yml#play:[0]#task:[0]",
        "task playbook:rag_document_defaults.yml#play:[0]#task:[1]",
        "task playbook:rag_document_defaults.yml#play:[0]#task:[2]",
        "task playbook:rag_document_defaults.yml#play:[0]#task:[3]",
        "task playbook:rag_document_defaults.yml#play:[0]#task:[4]",
        "task playbook:rag_document_defaults.yml#play:[0]#task:[5]"
    ],
    "post_tasks": [],
    "roles": [],
    "module_defaults": {
        "ibm.ce_emea_rag.rag_document": "{{ my_module_defaults }}"
    },
    "options": {
        "hosts": "localhost",
        "gather_facts": false
    },
    "collections_in_play": [],
    "become": null,
    "vars_files": [
        "my_module_defaults.yml"
    ],
    "task_loading": {
        "total": 6,
        "success": 6,
        "failure": 0,
        "errors": []
    }
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_1.yml#play:[0]#task:[0]",
    "name": "Specific API agentx. Get a list of AI assistant agents in a Retrieval-Augmented Generation (RAG) framework",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 0,
    "play_index": 0,
    "filepath": "rag_agent_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_result": "task playbook:rag_agent_1.yml#play:[0]#task:[0]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Get a list of AI assistant agents in a Retrieval-Augmented Generation (RAG) framework",
        "register": "get_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "method": "LIST"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Get a list of AI assistant agents in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        method: LIST\n      register: get_result\n",
    "line_num_in_file": [
        10,
        15
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_1.yml#play:[0]#task:[1]",
    "name": "Display the list of RAG agents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 1,
    "play_index": 0,
    "filepath": "rag_agent_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the list of RAG agents"
    },
    "module_options": {
        "var": "get_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the list of RAG agents\n      debug:\n        var: get_result.json_payload\n",
    "line_num_in_file": [
        16,
        19
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_1.yml#play:[0]#task:[2]",
    "name": "Specific API agentx. Create an AI assistant agent in a Retrieval-Augmented Generation (RAG) framework",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 2,
    "play_index": 0,
    "filepath": "rag_agent_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "create_result": "task playbook:rag_agent_1.yml#play:[0]#task:[2]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Create an AI assistant agent in a Retrieval-Augmented Generation (RAG) framework",
        "register": "create_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "agent_name": "{{ agent_name }}",
        "method": "CREATE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Create an AI assistant agent in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        agent_name: \"{{ agent_name }}\"\n        method: CREATE\n      register: create_result\n",
    "line_num_in_file": [
        20,
        26
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_1.yml#play:[0]#task:[3]",
    "name": "Display the output of Create a RAG agent",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 3,
    "play_index": 0,
    "filepath": "rag_agent_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of Create a RAG agent"
    },
    "module_options": {
        "var": "create_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of Create a RAG agent\n      debug:\n        var: create_result.json_payload\n",
    "line_num_in_file": [
        27,
        30
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_1.yml#play:[0]#task:[4]",
    "name": "Specific API agentx. Update an AI assistant agent in a Retrieval-Augmented Generation (RAG) framework",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 4,
    "play_index": 0,
    "filepath": "rag_agent_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "update_result": "task playbook:rag_agent_1.yml#play:[0]#task:[4]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Update an AI assistant agent in a Retrieval-Augmented Generation (RAG) framework",
        "register": "update_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "agent_name": "{{ agent_name }}",
        "method": "UPDATE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Update an AI assistant agent in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        agent_name: \"{{ agent_name }}\"\n        method: UPDATE\n      register: update_result\n",
    "line_num_in_file": [
        31,
        38
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_1.yml#play:[0]#task:[5]",
    "name": "Display the output of Create an AI assistant agent",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 5,
    "play_index": 0,
    "filepath": "rag_agent_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of Create an AI assistant agent"
    },
    "module_options": {
        "var": "update_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of Create an AI assistant agent\n      debug:\n        var: update_result.json_payload\n",
    "line_num_in_file": [
        39,
        42
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_1.yml#play:[0]#task:[6]",
    "name": "Specific API agentx. Get an AI assistant agentt by its ID in a Retrieval-Augmented Generation (RAG) framework",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "agent_name"
        ]
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 6,
    "play_index": 0,
    "filepath": "rag_agent_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_by_id_result": "task playbook:rag_agent_1.yml#play:[0]#task:[6]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Get an AI assistant agentt by its ID in a Retrieval-Augmented Generation (RAG) framework",
        "register": "get_by_id_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "method": "GET_BY_ID"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Get an AI assistant agentt by its ID in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n",
    "line_num_in_file": [
        43,
        49
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_1.yml#play:[0]#task:[7]",
    "name": "Display the agent info",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 7,
    "play_index": 0,
    "filepath": "rag_agent_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the agent info"
    },
    "module_options": {
        "var": "get_by_id_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the agent info\n      debug:\n        var: get_by_id_result.json_payload\n",
    "line_num_in_file": [
        50,
        53
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_1.yml#play:[0]#task:[8]",
    "name": "Specific API agentx. Delete an AI assistant agent by its ID in a Retrieval-Augmented Generation (RAG) framework",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "agent_name"
        ]
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 8,
    "play_index": 0,
    "filepath": "rag_agent_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "delete_result": "task playbook:rag_agent_1.yml#play:[0]#task:[8]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Delete an AI assistant agent by its ID in a Retrieval-Augmented Generation (RAG) framework",
        "register": "delete_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "method": "DELETE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Delete an AI assistant agent by its ID in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: DELETE\n      register: delete_result\n",
    "line_num_in_file": [
        54,
        60
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_1.yml#play:[0]#task:[9]",
    "name": "Display the delete agent result",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 9,
    "play_index": 0,
    "filepath": "rag_agent_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the delete agent result"
    },
    "module_options": {
        "var": "delete_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the delete agent result\n      debug:\n        var: delete_result.json_payload\n",
    "line_num_in_file": [
        61,
        65
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_2.yml#play:[0]#task:[0]",
    "name": "Specific API agentx. Get a list of AI assistant agents within a Retrieval-Augmented Generation (RAG) system",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 0,
    "play_index": 0,
    "filepath": "rag_agent_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_result": "task playbook:rag_agent_2.yml#play:[0]#task:[0]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Get a list of AI assistant agents within a Retrieval-Augmented Generation (RAG) system",
        "register": "get_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "method": "LIST"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Get a list of AI assistant agents within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        method: LIST\n      register: get_result\n",
    "line_num_in_file": [
        12,
        17
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_2.yml#play:[0]#task:[1]",
    "name": "Display the list of RAG agents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 1,
    "play_index": 0,
    "filepath": "rag_agent_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the list of RAG agents"
    },
    "module_options": {
        "var": "get_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the list of RAG agents\n      debug:\n        var: get_result.json_payload\n",
    "line_num_in_file": [
        18,
        21
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_2.yml#play:[0]#task:[2]",
    "name": "Specific API agentx. Create an AI assistant agent within a Retrieval-Augmented Generation (RAG) system",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 2,
    "play_index": 0,
    "filepath": "rag_agent_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "create_result": "task playbook:rag_agent_2.yml#play:[0]#task:[2]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Create an AI assistant agent within a Retrieval-Augmented Generation (RAG) system",
        "register": "create_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "agent_name": "{{ agent_name }}",
        "method": "CREATE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Create an AI assistant agent within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        agent_name: \"{{ agent_name }}\"\n        method: CREATE\n      register: create_result\n",
    "line_num_in_file": [
        22,
        28
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_2.yml#play:[0]#task:[3]",
    "name": "Display the output of Create a RAG agent",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 3,
    "play_index": 0,
    "filepath": "rag_agent_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of Create a RAG agent"
    },
    "module_options": {
        "var": "create_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of Create a RAG agent\n      debug:\n        var: create_result.json_payload\n",
    "line_num_in_file": [
        29,
        32
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_2.yml#play:[0]#task:[4]",
    "name": "Specific API agentx. Update an AI assistant agent within a Retrieval-Augmented Generation (RAG) system",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 4,
    "play_index": 0,
    "filepath": "rag_agent_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "update_result": "task playbook:rag_agent_2.yml#play:[0]#task:[4]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Update an AI assistant agent within a Retrieval-Augmented Generation (RAG) system",
        "register": "update_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "agent_name": "{{ agent_name }}",
        "method": "UPDATE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Update an AI assistant agent within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        agent_name: \"{{ agent_name }}\"\n        method: UPDATE\n      register: update_result\n",
    "line_num_in_file": [
        33,
        40
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_2.yml#play:[0]#task:[5]",
    "name": "Display the output of Create an AI assistant agen",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 5,
    "play_index": 0,
    "filepath": "rag_agent_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of Create an AI assistant agen"
    },
    "module_options": {
        "var": "update_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of Create an AI assistant agen\n      debug:\n        var: update_result.json_payload\n",
    "line_num_in_file": [
        41,
        44
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_2.yml#play:[0]#task:[6]",
    "name": "Specific API agentx. Get an AI assistant agen by its ID within a Retrieval-Augmented Generation (RAG) system",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "agent_name"
        ]
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 6,
    "play_index": 0,
    "filepath": "rag_agent_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_by_id_result": "task playbook:rag_agent_2.yml#play:[0]#task:[6]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Get an AI assistant agen by its ID within a Retrieval-Augmented Generation (RAG) system",
        "register": "get_by_id_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "method": "GET_BY_ID"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Get an AI assistant agen by its ID within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n",
    "line_num_in_file": [
        45,
        51
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_2.yml#play:[0]#task:[7]",
    "name": "Display the agent info",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 7,
    "play_index": 0,
    "filepath": "rag_agent_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the agent info"
    },
    "module_options": {
        "var": "get_by_id_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the agent info\n      debug:\n        var: get_by_id_result.json_payload\n",
    "line_num_in_file": [
        52,
        55
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_2.yml#play:[0]#task:[8]",
    "name": "Specific API agentx. Delete an AI assistant agen by its ID within a Retrieval-Augmented Generation (RAG) system",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "agent_name"
        ]
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 8,
    "play_index": 0,
    "filepath": "rag_agent_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "delete_result": "task playbook:rag_agent_2.yml#play:[0]#task:[8]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Delete an AI assistant agen by its ID within a Retrieval-Augmented Generation (RAG) system",
        "register": "delete_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "method": "DELETE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Delete an AI assistant agen by its ID within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: DELETE\n      register: delete_result\n",
    "line_num_in_file": [
        56,
        62
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_2.yml#play:[0]#task:[9]",
    "name": "Display the delete agent result",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 9,
    "play_index": 0,
    "filepath": "rag_agent_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the delete agent result"
    },
    "module_options": {
        "var": "delete_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the delete agent result\n      debug:\n        var: delete_result.json_payload\n",
    "line_num_in_file": [
        63,
        67
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_3.yml#play:[0]#task:[0]",
    "name": "Specific API agentx. Get a list of AI assistant agents in a Retrieval-Augmented Generation (RAG) architecture",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 0,
    "play_index": 0,
    "filepath": "rag_agent_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_result": "task playbook:rag_agent_3.yml#play:[0]#task:[0]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Get a list of AI assistant agents in a Retrieval-Augmented Generation (RAG) architecture",
        "register": "get_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "method": "LIST"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Get a list of AI assistant agents in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        method: LIST\n      register: get_result\n",
    "line_num_in_file": [
        12,
        17
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_3.yml#play:[0]#task:[1]",
    "name": "Display the list of RAG agents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 1,
    "play_index": 0,
    "filepath": "rag_agent_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the list of RAG agents"
    },
    "module_options": {
        "var": "get_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the list of RAG agents\n      debug:\n        var: get_result.json_payload\n",
    "line_num_in_file": [
        18,
        21
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_3.yml#play:[0]#task:[2]",
    "name": "Specific API agentx. Create an AI assistant agent in a Retrieval-Augmented Generation (RAG) architecture",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 2,
    "play_index": 0,
    "filepath": "rag_agent_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "create_result": "task playbook:rag_agent_3.yml#play:[0]#task:[2]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Create an AI assistant agent in a Retrieval-Augmented Generation (RAG) architecture",
        "register": "create_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "agent_name": "{{ agent_name }}",
        "method": "CREATE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Create an AI assistant agent in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        agent_name: \"{{ agent_name }}\"\n        method: CREATE\n      register: create_result\n",
    "line_num_in_file": [
        22,
        28
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_3.yml#play:[0]#task:[3]",
    "name": "Display the output of Create a RAG agent",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 3,
    "play_index": 0,
    "filepath": "rag_agent_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of Create a RAG agent"
    },
    "module_options": {
        "var": "create_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of Create a RAG agent\n      debug:\n        var: create_result.json_payload\n",
    "line_num_in_file": [
        29,
        32
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_3.yml#play:[0]#task:[4]",
    "name": "Specific API agentx. Update an AI assistant agent in a Retrieval-Augmented Generation (RAG) architecture",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 4,
    "play_index": 0,
    "filepath": "rag_agent_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "update_result": "task playbook:rag_agent_3.yml#play:[0]#task:[4]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Update an AI assistant agent in a Retrieval-Augmented Generation (RAG) architecture",
        "register": "update_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "agent_name": "{{ agent_name }}",
        "method": "UPDATE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Update an AI assistant agent in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        agent_name: \"{{ agent_name }}\"\n        method: UPDATE\n      register: update_result\n",
    "line_num_in_file": [
        33,
        40
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_3.yml#play:[0]#task:[5]",
    "name": "Display the output of Create an AI assistant agen",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 5,
    "play_index": 0,
    "filepath": "rag_agent_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of Create an AI assistant agen"
    },
    "module_options": {
        "var": "update_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of Create an AI assistant agen\n      debug:\n        var: update_result.json_payload\n",
    "line_num_in_file": [
        41,
        44
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_3.yml#play:[0]#task:[6]",
    "name": "Specific API agentx. Get an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) architecture",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "agent_name"
        ]
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 6,
    "play_index": 0,
    "filepath": "rag_agent_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_by_id_result": "task playbook:rag_agent_3.yml#play:[0]#task:[6]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Get an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) architecture",
        "register": "get_by_id_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "method": "GET_BY_ID"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Get an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n",
    "line_num_in_file": [
        45,
        51
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_3.yml#play:[0]#task:[7]",
    "name": "Display the agent info",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 7,
    "play_index": 0,
    "filepath": "rag_agent_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the agent info"
    },
    "module_options": {
        "var": "get_by_id_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the agent info\n      debug:\n        var: get_by_id_result.json_payload\n",
    "line_num_in_file": [
        52,
        55
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_3.yml#play:[0]#task:[8]",
    "name": "Specific API agentx. Delete an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) architecture",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "agent_name"
        ]
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 8,
    "play_index": 0,
    "filepath": "rag_agent_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "delete_result": "task playbook:rag_agent_3.yml#play:[0]#task:[8]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Delete an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) architecture",
        "register": "delete_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "method": "DELETE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Delete an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: DELETE\n      register: delete_result\n",
    "line_num_in_file": [
        56,
        62
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_3.yml#play:[0]#task:[9]",
    "name": "Display the delete agent result",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 9,
    "play_index": 0,
    "filepath": "rag_agent_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the delete agent result"
    },
    "module_options": {
        "var": "delete_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the delete agent result\n      debug:\n        var: delete_result.json_payload\n",
    "line_num_in_file": [
        63,
        67
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_4.yml#play:[0]#task:[0]",
    "name": "Get a list of AI assistant agents into a Retrieval-Augmented Generation (RAG) structure",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 0,
    "play_index": 0,
    "filepath": "rag_agent_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_result": "task playbook:rag_agent_4.yml#play:[0]#task:[0]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Get a list of AI assistant agents into a Retrieval-Augmented Generation (RAG) structure",
        "register": "get_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "method": "LIST"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Get a list of AI assistant agents into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        method: LIST\n      register: get_result\n",
    "line_num_in_file": [
        12,
        17
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_4.yml#play:[0]#task:[1]",
    "name": "Display the list of RAG agents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 1,
    "play_index": 0,
    "filepath": "rag_agent_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the list of RAG agents"
    },
    "module_options": {
        "var": "get_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the list of RAG agents\n      debug:\n        var: get_result.json_payload\n",
    "line_num_in_file": [
        18,
        21
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_4.yml#play:[0]#task:[2]",
    "name": "Create an AI assistant agent into a Retrieval-Augmented Generation (RAG) structure",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 2,
    "play_index": 0,
    "filepath": "rag_agent_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "create_result": "task playbook:rag_agent_4.yml#play:[0]#task:[2]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Create an AI assistant agent into a Retrieval-Augmented Generation (RAG) structure",
        "register": "create_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "agent_name": "{{ agent_name }}",
        "method": "CREATE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Create an AI assistant agent into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        agent_name: \"{{ agent_name }}\"\n        method: CREATE\n      register: create_result\n",
    "line_num_in_file": [
        22,
        28
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_4.yml#play:[0]#task:[3]",
    "name": "Display the output of Create a RAG agent",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 3,
    "play_index": 0,
    "filepath": "rag_agent_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of Create a RAG agent"
    },
    "module_options": {
        "var": "create_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of Create a RAG agent\n      debug:\n        var: create_result.json_payload\n",
    "line_num_in_file": [
        29,
        32
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_4.yml#play:[0]#task:[4]",
    "name": "Update an AI assistant agent into a Retrieval-Augmented Generation (RAG) structure",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 4,
    "play_index": 0,
    "filepath": "rag_agent_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "update_result": "task playbook:rag_agent_4.yml#play:[0]#task:[4]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Update an AI assistant agent into a Retrieval-Augmented Generation (RAG) structure",
        "register": "update_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "agent_name": "{{ agent_name }}",
        "method": "UPDATE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Update an AI assistant agent into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        agent_name: \"{{ agent_name }}\"\n        method: UPDATE\n      register: update_result\n",
    "line_num_in_file": [
        33,
        40
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_4.yml#play:[0]#task:[5]",
    "name": "Display the output of Create an AI assistant agen",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 5,
    "play_index": 0,
    "filepath": "rag_agent_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of Create an AI assistant agen"
    },
    "module_options": {
        "var": "update_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of Create an AI assistant agen\n      debug:\n        var: update_result.json_payload\n",
    "line_num_in_file": [
        41,
        44
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_4.yml#play:[0]#task:[6]",
    "name": "Get an AI assistant agen by its ID into a Retrieval-Augmented Generation (RAG) structure",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "agent_name"
        ]
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 6,
    "play_index": 0,
    "filepath": "rag_agent_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_by_id_result": "task playbook:rag_agent_4.yml#play:[0]#task:[6]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Get an AI assistant agen by its ID into a Retrieval-Augmented Generation (RAG) structure",
        "register": "get_by_id_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "method": "GET_BY_ID"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Get an AI assistant agen by its ID into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n",
    "line_num_in_file": [
        45,
        51
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_4.yml#play:[0]#task:[7]",
    "name": "Display the agent info",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 7,
    "play_index": 0,
    "filepath": "rag_agent_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the agent info"
    },
    "module_options": {
        "var": "get_by_id_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the agent info\n      debug:\n        var: get_by_id_result.json_payload\n",
    "line_num_in_file": [
        52,
        55
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_4.yml#play:[0]#task:[8]",
    "name": "Delete an AI assistant agen by its ID into a Retrieval-Augmented Generation (RAG) structure",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "agent_name"
        ]
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 8,
    "play_index": 0,
    "filepath": "rag_agent_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "delete_result": "task playbook:rag_agent_4.yml#play:[0]#task:[8]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Delete an AI assistant agen by its ID into a Retrieval-Augmented Generation (RAG) structure",
        "register": "delete_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "method": "DELETE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Delete an AI assistant agen by its ID into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: DELETE\n      register: delete_result\n",
    "line_num_in_file": [
        56,
        62
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_4.yml#play:[0]#task:[9]",
    "name": "Display the delete agent result",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 9,
    "play_index": 0,
    "filepath": "rag_agent_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the delete agent result"
    },
    "module_options": {
        "var": "delete_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the delete agent result\n      debug:\n        var: delete_result.json_payload\n",
    "line_num_in_file": [
        63,
        67
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_5.yml#play:[0]#task:[0]",
    "name": "Specific API agentx. Get a list of AI assistant agents in a Retrieval-Augmented Generation (RAG) setup",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 0,
    "play_index": 0,
    "filepath": "rag_agent_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_result": "task playbook:rag_agent_5.yml#play:[0]#task:[0]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Get a list of AI assistant agents in a Retrieval-Augmented Generation (RAG) setup",
        "register": "get_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "method": "LIST"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Get a list of AI assistant agents in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        method: LIST\n      register: get_result\n",
    "line_num_in_file": [
        12,
        17
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_5.yml#play:[0]#task:[1]",
    "name": "Display the list of RAG agents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 1,
    "play_index": 0,
    "filepath": "rag_agent_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the list of RAG agents"
    },
    "module_options": {
        "var": "get_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the list of RAG agents\n      debug:\n        var: get_result.json_payload\n",
    "line_num_in_file": [
        18,
        21
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_5.yml#play:[0]#task:[2]",
    "name": "Specific API agentx. Create an AI assistant agent in a Retrieval-Augmented Generation (RAG) setup",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 2,
    "play_index": 0,
    "filepath": "rag_agent_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "create_result": "task playbook:rag_agent_5.yml#play:[0]#task:[2]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Create an AI assistant agent in a Retrieval-Augmented Generation (RAG) setup",
        "register": "create_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "agent_name": "{{ agent_name }}",
        "method": "CREATE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Create an AI assistant agent in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        agent_name: \"{{ agent_name }}\"\n        method: CREATE\n      register: create_result\n",
    "line_num_in_file": [
        22,
        28
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_5.yml#play:[0]#task:[3]",
    "name": "Display the output of Create a RAG agent",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 3,
    "play_index": 0,
    "filepath": "rag_agent_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of Create a RAG agent"
    },
    "module_options": {
        "var": "create_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of Create a RAG agent\n      debug:\n        var: create_result.json_payload\n",
    "line_num_in_file": [
        29,
        32
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_5.yml#play:[0]#task:[4]",
    "name": "Specific API agentx. Update an AI assistant agent in a Retrieval-Augmented Generation (RAG) setup",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 4,
    "play_index": 0,
    "filepath": "rag_agent_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "update_result": "task playbook:rag_agent_5.yml#play:[0]#task:[4]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Update an AI assistant agent in a Retrieval-Augmented Generation (RAG) setup",
        "register": "update_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "agent_name": "{{ agent_name }}",
        "method": "UPDATE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Update an AI assistant agent in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        agent_name: \"{{ agent_name }}\"\n        method: UPDATE\n      register: update_result\n",
    "line_num_in_file": [
        33,
        40
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_5.yml#play:[0]#task:[5]",
    "name": "Display the output of Create an AI assistant agen",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 5,
    "play_index": 0,
    "filepath": "rag_agent_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of Create an AI assistant agen"
    },
    "module_options": {
        "var": "update_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of Create an AI assistant agen\n      debug:\n        var: update_result.json_payload\n",
    "line_num_in_file": [
        41,
        44
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_5.yml#play:[0]#task:[6]",
    "name": "Specific API agentx. Get an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) setup",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "agent_name"
        ]
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 6,
    "play_index": 0,
    "filepath": "rag_agent_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_by_id_result": "task playbook:rag_agent_5.yml#play:[0]#task:[6]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Get an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) setup",
        "register": "get_by_id_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "method": "GET_BY_ID"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Get an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n",
    "line_num_in_file": [
        45,
        51
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_5.yml#play:[0]#task:[7]",
    "name": "Display the agent info",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 7,
    "play_index": 0,
    "filepath": "rag_agent_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the agent info"
    },
    "module_options": {
        "var": "get_by_id_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the agent info\n      debug:\n        var: get_by_id_result.json_payload\n",
    "line_num_in_file": [
        52,
        55
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_5.yml#play:[0]#task:[8]",
    "name": "Specific API agentx. Delete an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) setup",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_agent",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "agent_name"
        ]
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_agent",
    "index": 8,
    "play_index": 0,
    "filepath": "rag_agent_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "delete_result": "task playbook:rag_agent_5.yml#play:[0]#task:[8]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Delete an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) setup",
        "register": "delete_result"
    },
    "module_options": {
        "rag_workspace_id": "{{ rag_workspace_id }}",
        "rag_agent_id": "{{create_result.json_payload.id}}",
        "method": "DELETE"
    },
    "executable": "ibm.ce_emea_rag.rag_agent",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Delete an AI assistant agen by its ID in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_agent:\n        rag_workspace_id: \"{{ rag_workspace_id }}\"\n        rag_agent_id: \"{{create_result.json_payload.id}}\"\n        method: DELETE\n      register: delete_result\n",
    "line_num_in_file": [
        56,
        62
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_agent_5.yml#play:[0]#task:[9]",
    "name": "Display the delete agent result",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_workspace_id",
            "agent_name"
        ],
        "variable.unknown_name_vars": [
            "rag_workspace_id",
            "agent_name"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 9,
    "play_index": 0,
    "filepath": "rag_agent_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the delete agent result"
    },
    "module_options": {
        "var": "delete_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the delete agent result\n      debug:\n        var: delete_result.json_payload\n",
    "line_num_in_file": [
        63,
        67
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_1.yml#play:[0]#task:[0]",
    "name": "Specific API agentx. Get a list of documents in a Retrieval-Augmented Generation (RAG) framework",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 0,
    "play_index": 0,
    "filepath": "rag_document_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_result": "task playbook:rag_document_1.yml#play:[0]#task:[0]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Get a list of documents in a Retrieval-Augmented Generation (RAG) framework",
        "register": "get_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "method": "LIST"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Get a list of documents in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        method: LIST\n      register: get_result\n",
    "line_num_in_file": [
        15,
        20
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_1.yml#play:[0]#task:[1]",
    "name": "Display the list of RAG documents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 1,
    "play_index": 0,
    "filepath": "rag_document_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the list of RAG documents"
    },
    "module_options": {
        "var": "get_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the list of RAG documents\n      debug:\n        var: get_result.json_payload\n",
    "line_num_in_file": [
        21,
        24
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_1.yml#play:[0]#task:[2]",
    "name": "Specific API agentx. Get or Retrieve a document by its ID in a Retrieval-Augmented Generation (RAG) framework",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 2,
    "play_index": 0,
    "filepath": "rag_document_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_by_id_result": "task playbook:rag_document_1.yml#play:[0]#task:[2]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Get or Retrieve a document by its ID in a Retrieval-Augmented Generation (RAG) framework",
        "register": "get_by_id_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_document_id": "{{ get_result.json_payload[0].id  }}",
        "method": "GET_BY_ID"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Get or Retrieve a document by its ID in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ get_result.json_payload[0].id  }}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n",
    "line_num_in_file": [
        25,
        31
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_1.yml#play:[0]#task:[3]",
    "name": "Display the RAG document info",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 3,
    "play_index": 0,
    "filepath": "rag_document_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the RAG document info"
    },
    "module_options": {
        "var": "get_by_id_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the RAG document info\n      debug:\n        var: get_by_id_result.json_payload\n\n",
    "line_num_in_file": [
        32,
        36
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_1.yml#play:[0]#task:[4]",
    "name": "Specific API agentx. Embed a document in a Retrieval-Augmented Generation (RAG) framework",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 4,
    "play_index": 0,
    "filepath": "rag_document_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "create_result": "task playbook:rag_document_1.yml#play:[0]#task:[4]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Embed a document in a Retrieval-Augmented Generation (RAG) framework",
        "register": "create_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_file_name": "Red_Hat_Partner Training_Portal_User_Guide.pdf",
        "rag_file_url": "http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf",
        "rag_chunk_overlap": 300,
        "rag_chunk_size": 800,
        "rag_keep_files": false,
        "method": "CREATE"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Embed a document in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_file_name: Red_Hat_Partner Training_Portal_User_Guide.pdf\n        rag_file_url: http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf\n        rag_chunk_overlap: 300\n        rag_chunk_size: 800\n        rag_keep_files: false\n        method: CREATE\n      register: create_result\n",
    "line_num_in_file": [
        37,
        47
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_1.yml#play:[0]#task:[5]",
    "name": "Specific API agentx. Display the output of the document ingestion",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 5,
    "play_index": 0,
    "filepath": "rag_document_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Display the output of the document ingestion"
    },
    "module_options": {
        "var": "create_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Display the output of the document ingestion\n      debug:\n        var: create_result.json_payload\n",
    "line_num_in_file": [
        48,
        51
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_1.yml#play:[0]#task:[6]",
    "name": "",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.pause",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.pause",
        "module.need_correction": true,
        "module.examples": "\n- name: Pause for 5 minutes to build app cache\n  ansible.builtin.pause:\n    minutes: 5\n\n- name: Pause until you can verify updates to an application were successful\n  ansible.builtin.pause:\n\n- name: A helpful reminder of what to look out for post-update\n  ansible.builtin.pause:\n    prompt: \"Make sure org.foo.FooOverload exception is not present\"\n\n- name: Pause to get some sensitive input\n  ansible.builtin.pause:\n    prompt: \"Enter a secret\"\n    echo: no\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "echo",
            "minutes",
            "prompt",
            "seconds"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "pause",
    "index": 6,
    "play_index": 0,
    "filepath": "rag_document_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "my_pause": "task playbook:rag_document_1.yml#play:[0]#task:[6]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "register": "my_pause",
        "delegate_to": "localhost"
    },
    "module_options": {
        "prompt": "Do you want to continue(yes/no)?"
    },
    "executable": "pause",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - pause:\n        prompt: \"Do you want to continue(yes/no)?\"\n      register: my_pause\n      delegate_to: localhost\n\n",
    "line_num_in_file": [
        52,
        57
    ],
    "resolved_name": "ansible.builtin.pause",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "pause",
        "fqcn": "ansible.builtin.pause",
        "key": "module collection:ansible.builtin#module:ansible.builtin.pause"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_1.yml#play:[0]#task:[7]",
    "name": "Specific API agentx. Remove or Delete a document by its ID in a Retrieval-Augmented Generation (RAG) framework",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 7,
    "play_index": 0,
    "filepath": "rag_document_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "delete_result": "task playbook:rag_document_1.yml#play:[0]#task:[7]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Specific API agentx. Remove or Delete a document by its ID in a Retrieval-Augmented Generation (RAG) framework",
        "register": "delete_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_document_id": "{{ create_result.json_payload.id }}",
        "method": "DELETE"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Specific API agentx. Remove or Delete a document by its ID in a Retrieval-Augmented Generation (RAG) framework\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ create_result.json_payload.id }}\"\n        method: DELETE\n      register: delete_result\n",
    "line_num_in_file": [
        58,
        64
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_1.yml#play:[0]#task:[8]",
    "name": "Display the delete document result",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 8,
    "play_index": 0,
    "filepath": "rag_document_1.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the delete document result"
    },
    "module_options": {
        "var": "delete_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the delete document result\n      debug:\n        var: delete_result.json_payload\n\n\n\n\n",
    "line_num_in_file": [
        65,
        73
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_2.yml#play:[0]#task:[0]",
    "name": "Get a list of documents within a Retrieval-Augmented Generation (RAG) system",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 0,
    "play_index": 0,
    "filepath": "rag_document_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_result": "task playbook:rag_document_2.yml#play:[0]#task:[0]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Get a list of documents within a Retrieval-Augmented Generation (RAG) system",
        "register": "get_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "method": "LIST"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Get a list of documents within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        method: LIST\n      register: get_result\n",
    "line_num_in_file": [
        15,
        20
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_2.yml#play:[0]#task:[1]",
    "name": "Display the list of RAG documents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 1,
    "play_index": 0,
    "filepath": "rag_document_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the list of RAG documents"
    },
    "module_options": {
        "var": "get_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the list of RAG documents\n      debug:\n        var: get_result.json_payload\n",
    "line_num_in_file": [
        21,
        24
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_2.yml#play:[0]#task:[2]",
    "name": "Get or Retrieve a document by its ID within a Retrieval-Augmented Generation (RAG) system",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 2,
    "play_index": 0,
    "filepath": "rag_document_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_by_id_result": "task playbook:rag_document_2.yml#play:[0]#task:[2]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Get or Retrieve a document by its ID within a Retrieval-Augmented Generation (RAG) system",
        "register": "get_by_id_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_document_id": "{{ get_result.json_payload[0].id  }}",
        "method": "GET_BY_ID"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Get or Retrieve a document by its ID within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ get_result.json_payload[0].id  }}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n",
    "line_num_in_file": [
        25,
        31
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_2.yml#play:[0]#task:[3]",
    "name": "Display the RAG document info",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 3,
    "play_index": 0,
    "filepath": "rag_document_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the RAG document info"
    },
    "module_options": {
        "var": "get_by_id_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the RAG document info\n      debug:\n        var: get_by_id_result.json_payload\n\n",
    "line_num_in_file": [
        32,
        36
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_2.yml#play:[0]#task:[4]",
    "name": "Upload a document within a Retrieval-Augmented Generation (RAG) system",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 4,
    "play_index": 0,
    "filepath": "rag_document_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "create_result": "task playbook:rag_document_2.yml#play:[0]#task:[4]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Upload a document within a Retrieval-Augmented Generation (RAG) system",
        "register": "create_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_file_name": "Red_Hat_Partner Training_Portal_User_Guide.pdf",
        "rag_file_url": "http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf",
        "rag_chunk_overlap": 150,
        "rag_chunk_size": 400,
        "rag_keep_files": false,
        "method": "CREATE"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Upload a document within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_file_name: Red_Hat_Partner Training_Portal_User_Guide.pdf\n        rag_file_url: http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf\n        rag_chunk_overlap: 150\n        rag_chunk_size: 400\n        rag_keep_files: false\n        method: CREATE\n      register: create_result\n",
    "line_num_in_file": [
        37,
        47
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_2.yml#play:[0]#task:[5]",
    "name": "Display the output of the document ingestion",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 5,
    "play_index": 0,
    "filepath": "rag_document_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of the document ingestion"
    },
    "module_options": {
        "var": "create_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of the document ingestion\n      debug:\n        var: create_result.json_payload\n",
    "line_num_in_file": [
        48,
        51
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_2.yml#play:[0]#task:[6]",
    "name": "",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.pause",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.pause",
        "module.need_correction": true,
        "module.examples": "\n- name: Pause for 5 minutes to build app cache\n  ansible.builtin.pause:\n    minutes: 5\n\n- name: Pause until you can verify updates to an application were successful\n  ansible.builtin.pause:\n\n- name: A helpful reminder of what to look out for post-update\n  ansible.builtin.pause:\n    prompt: \"Make sure org.foo.FooOverload exception is not present\"\n\n- name: Pause to get some sensitive input\n  ansible.builtin.pause:\n    prompt: \"Enter a secret\"\n    echo: no\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "echo",
            "minutes",
            "prompt",
            "seconds"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "pause",
    "index": 6,
    "play_index": 0,
    "filepath": "rag_document_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "my_pause": "task playbook:rag_document_2.yml#play:[0]#task:[6]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "register": "my_pause",
        "delegate_to": "localhost"
    },
    "module_options": {
        "prompt": "Do you want to continue(yes/no)?"
    },
    "executable": "pause",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - pause:\n        prompt: \"Do you want to continue(yes/no)?\"\n      register: my_pause\n      delegate_to: localhost\n\n",
    "line_num_in_file": [
        52,
        57
    ],
    "resolved_name": "ansible.builtin.pause",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "pause",
        "fqcn": "ansible.builtin.pause",
        "key": "module collection:ansible.builtin#module:ansible.builtin.pause"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_2.yml#play:[0]#task:[7]",
    "name": "Remove or Delete a document by its ID within a Retrieval-Augmented Generation (RAG) system",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 7,
    "play_index": 0,
    "filepath": "rag_document_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "delete_result": "task playbook:rag_document_2.yml#play:[0]#task:[7]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Remove or Delete a document by its ID within a Retrieval-Augmented Generation (RAG) system",
        "register": "delete_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_document_id": "{{ create_result.json_payload.id }}",
        "method": "DELETE"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Remove or Delete a document by its ID within a Retrieval-Augmented Generation (RAG) system\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ create_result.json_payload.id }}\"\n        method: DELETE\n      register: delete_result\n",
    "line_num_in_file": [
        58,
        64
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_2.yml#play:[0]#task:[8]",
    "name": "Display the delete document result",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 8,
    "play_index": 0,
    "filepath": "rag_document_2.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the delete document result"
    },
    "module_options": {
        "var": "delete_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the delete document result\n      debug:\n        var: delete_result.json_payload\n\n\n\n\n",
    "line_num_in_file": [
        65,
        73
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_3.yml#play:[0]#task:[0]",
    "name": "Get a list of documents in a Retrieval-Augmented Generation (RAG) architecture",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 0,
    "play_index": 0,
    "filepath": "rag_document_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_result": "task playbook:rag_document_3.yml#play:[0]#task:[0]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Get a list of documents in a Retrieval-Augmented Generation (RAG) architecture",
        "register": "get_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "method": "LIST"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Get a list of documents in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        method: LIST\n      register: get_result\n",
    "line_num_in_file": [
        15,
        20
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_3.yml#play:[0]#task:[1]",
    "name": "Display the list of RAG documents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 1,
    "play_index": 0,
    "filepath": "rag_document_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the list of RAG documents"
    },
    "module_options": {
        "var": "get_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the list of RAG documents\n      debug:\n        var: get_result.json_payload\n",
    "line_num_in_file": [
        21,
        24
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_3.yml#play:[0]#task:[2]",
    "name": "Get or Retrieve a document by its ID  in a Retrieval-Augmented Generation (RAG) architecture",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 2,
    "play_index": 0,
    "filepath": "rag_document_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_by_id_result": "task playbook:rag_document_3.yml#play:[0]#task:[2]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Get or Retrieve a document by its ID  in a Retrieval-Augmented Generation (RAG) architecture",
        "register": "get_by_id_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_document_id": "{{ get_result.json_payload[0].id  }}",
        "method": "GET_BY_ID"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Get or Retrieve a document by its ID  in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ get_result.json_payload[0].id  }}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n",
    "line_num_in_file": [
        25,
        31
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_3.yml#play:[0]#task:[3]",
    "name": "Display the RAG document info",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 3,
    "play_index": 0,
    "filepath": "rag_document_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the RAG document info"
    },
    "module_options": {
        "var": "get_by_id_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the RAG document info\n      debug:\n        var: get_by_id_result.json_payload\n\n",
    "line_num_in_file": [
        32,
        36
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_3.yml#play:[0]#task:[4]",
    "name": "Transfer or Submit a document in a Retrieval-Augmented Generation (RAG) architecture",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 4,
    "play_index": 0,
    "filepath": "rag_document_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "create_result": "task playbook:rag_document_3.yml#play:[0]#task:[4]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Transfer or Submit a document in a Retrieval-Augmented Generation (RAG) architecture",
        "register": "create_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_file_name": "Red_Hat_Partner Training_Portal_User_Guide.pdf",
        "rag_file_url": "http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf",
        "rag_chunk_overlap": 150,
        "rag_chunk_size": 400,
        "rag_keep_files": false,
        "method": "CREATE"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Transfer or Submit a document in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_file_name: Red_Hat_Partner Training_Portal_User_Guide.pdf\n        rag_file_url: http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf\n        rag_chunk_overlap: 150\n        rag_chunk_size: 400\n        rag_keep_files: false\n        method: CREATE\n      register: create_result\n",
    "line_num_in_file": [
        37,
        47
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_3.yml#play:[0]#task:[5]",
    "name": "Display the output of the document ingestion",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 5,
    "play_index": 0,
    "filepath": "rag_document_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of the document ingestion"
    },
    "module_options": {
        "var": "create_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of the document ingestion\n      debug:\n        var: create_result.json_payload\n",
    "line_num_in_file": [
        48,
        51
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_3.yml#play:[0]#task:[6]",
    "name": "",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.pause",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.pause",
        "module.need_correction": true,
        "module.examples": "\n- name: Pause for 5 minutes to build app cache\n  ansible.builtin.pause:\n    minutes: 5\n\n- name: Pause until you can verify updates to an application were successful\n  ansible.builtin.pause:\n\n- name: A helpful reminder of what to look out for post-update\n  ansible.builtin.pause:\n    prompt: \"Make sure org.foo.FooOverload exception is not present\"\n\n- name: Pause to get some sensitive input\n  ansible.builtin.pause:\n    prompt: \"Enter a secret\"\n    echo: no\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "echo",
            "minutes",
            "prompt",
            "seconds"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "pause",
    "index": 6,
    "play_index": 0,
    "filepath": "rag_document_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "my_pause": "task playbook:rag_document_3.yml#play:[0]#task:[6]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "register": "my_pause",
        "delegate_to": "localhost"
    },
    "module_options": {
        "prompt": "Do you want to continue(yes/no)?"
    },
    "executable": "pause",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - pause:\n        prompt: \"Do you want to continue(yes/no)?\"\n      register: my_pause\n      delegate_to: localhost\n\n",
    "line_num_in_file": [
        52,
        57
    ],
    "resolved_name": "ansible.builtin.pause",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "pause",
        "fqcn": "ansible.builtin.pause",
        "key": "module collection:ansible.builtin#module:ansible.builtin.pause"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_3.yml#play:[0]#task:[7]",
    "name": "Remove or Delete a document by its ID in a Retrieval-Augmented Generation (RAG) architecture",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 7,
    "play_index": 0,
    "filepath": "rag_document_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "delete_result": "task playbook:rag_document_3.yml#play:[0]#task:[7]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Remove or Delete a document by its ID in a Retrieval-Augmented Generation (RAG) architecture",
        "register": "delete_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_document_id": "{{ create_result.json_payload.id }}",
        "method": "DELETE"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Remove or Delete a document by its ID in a Retrieval-Augmented Generation (RAG) architecture\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ create_result.json_payload.id }}\"\n        method: DELETE\n      register: delete_result\n",
    "line_num_in_file": [
        58,
        64
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_3.yml#play:[0]#task:[8]",
    "name": "Display the delete document result",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 8,
    "play_index": 0,
    "filepath": "rag_document_3.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the delete document result"
    },
    "module_options": {
        "var": "delete_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the delete document result\n      debug:\n        var: delete_result.json_payload\n\n\n\n\n",
    "line_num_in_file": [
        65,
        73
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_4.yml#play:[0]#task:[0]",
    "name": "Get a list of documents into a Retrieval-Augmented Generation (RAG) structure",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 0,
    "play_index": 0,
    "filepath": "rag_document_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_result": "task playbook:rag_document_4.yml#play:[0]#task:[0]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Get a list of documents into a Retrieval-Augmented Generation (RAG) structure",
        "register": "get_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "method": "LIST"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Get a list of documents into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        method: LIST\n      register: get_result\n",
    "line_num_in_file": [
        15,
        20
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_4.yml#play:[0]#task:[1]",
    "name": "Display the list of RAG documents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 1,
    "play_index": 0,
    "filepath": "rag_document_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the list of RAG documents"
    },
    "module_options": {
        "var": "get_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the list of RAG documents\n      debug:\n        var: get_result.json_payload\n",
    "line_num_in_file": [
        21,
        24
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_4.yml#play:[0]#task:[2]",
    "name": "Get or Retrieve a document by its ID  into a Retrieval-Augmented Generation (RAG) structure",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 2,
    "play_index": 0,
    "filepath": "rag_document_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_by_id_result": "task playbook:rag_document_4.yml#play:[0]#task:[2]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Get or Retrieve a document by its ID  into a Retrieval-Augmented Generation (RAG) structure",
        "register": "get_by_id_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_document_id": "{{ get_result.json_payload[0].id  }}",
        "method": "GET_BY_ID"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Get or Retrieve a document by its ID  into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ get_result.json_payload[0].id  }}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n",
    "line_num_in_file": [
        25,
        31
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_4.yml#play:[0]#task:[3]",
    "name": "Display the RAG document info",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 3,
    "play_index": 0,
    "filepath": "rag_document_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the RAG document info"
    },
    "module_options": {
        "var": "get_by_id_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the RAG document info\n      debug:\n        var: get_by_id_result.json_payload\n\n",
    "line_num_in_file": [
        32,
        36
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_4.yml#play:[0]#task:[4]",
    "name": "Transfer or Submit a document into a Retrieval-Augmented Generation (RAG) structure",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 4,
    "play_index": 0,
    "filepath": "rag_document_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "create_result": "task playbook:rag_document_4.yml#play:[0]#task:[4]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Transfer or Submit a document into a Retrieval-Augmented Generation (RAG) structure",
        "register": "create_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_file_name": "Red_Hat_Partner Training_Portal_User_Guide.pdf",
        "rag_file_url": "http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf",
        "rag_chunk_overlap": 150,
        "rag_chunk_size": 400,
        "rag_keep_files": false,
        "method": "CREATE"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Transfer or Submit a document into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_file_name: Red_Hat_Partner Training_Portal_User_Guide.pdf\n        rag_file_url: http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf\n        rag_chunk_overlap: 150\n        rag_chunk_size: 400\n        rag_keep_files: false\n        method: CREATE\n      register: create_result\n",
    "line_num_in_file": [
        37,
        47
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_4.yml#play:[0]#task:[5]",
    "name": "Display the output of the document ingestion",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 5,
    "play_index": 0,
    "filepath": "rag_document_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of the document ingestion"
    },
    "module_options": {
        "var": "create_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of the document ingestion\n      debug:\n        var: create_result.json_payload\n",
    "line_num_in_file": [
        48,
        51
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_4.yml#play:[0]#task:[6]",
    "name": "",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.pause",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.pause",
        "module.need_correction": true,
        "module.examples": "\n- name: Pause for 5 minutes to build app cache\n  ansible.builtin.pause:\n    minutes: 5\n\n- name: Pause until you can verify updates to an application were successful\n  ansible.builtin.pause:\n\n- name: A helpful reminder of what to look out for post-update\n  ansible.builtin.pause:\n    prompt: \"Make sure org.foo.FooOverload exception is not present\"\n\n- name: Pause to get some sensitive input\n  ansible.builtin.pause:\n    prompt: \"Enter a secret\"\n    echo: no\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "echo",
            "minutes",
            "prompt",
            "seconds"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "pause",
    "index": 6,
    "play_index": 0,
    "filepath": "rag_document_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "my_pause": "task playbook:rag_document_4.yml#play:[0]#task:[6]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "register": "my_pause",
        "delegate_to": "localhost"
    },
    "module_options": {
        "prompt": "Do you want to continue(yes/no)?"
    },
    "executable": "pause",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - pause:\n        prompt: \"Do you want to continue(yes/no)?\"\n      register: my_pause\n      delegate_to: localhost\n\n",
    "line_num_in_file": [
        52,
        57
    ],
    "resolved_name": "ansible.builtin.pause",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "pause",
        "fqcn": "ansible.builtin.pause",
        "key": "module collection:ansible.builtin#module:ansible.builtin.pause"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_4.yml#play:[0]#task:[7]",
    "name": "Remove or Delete a document by its ID into a Retrieval-Augmented Generation (RAG) structure",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 7,
    "play_index": 0,
    "filepath": "rag_document_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "delete_result": "task playbook:rag_document_4.yml#play:[0]#task:[7]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Remove or Delete a document by its ID into a Retrieval-Augmented Generation (RAG) structure",
        "register": "delete_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_document_id": "{{ create_result.json_payload.id }}",
        "method": "DELETE"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Remove or Delete a document by its ID into a Retrieval-Augmented Generation (RAG) structure\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ create_result.json_payload.id }}\"\n        method: DELETE\n      register: delete_result\n",
    "line_num_in_file": [
        58,
        64
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_4.yml#play:[0]#task:[8]",
    "name": "Display the delete document result",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 8,
    "play_index": 0,
    "filepath": "rag_document_4.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the delete document result"
    },
    "module_options": {
        "var": "delete_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the delete document result\n      debug:\n        var: delete_result.json_payload\n\n\n\n\n",
    "line_num_in_file": [
        65,
        73
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_5.yml#play:[0]#task:[0]",
    "name": "Get a list of documents in a Retrieval-Augmented Generation (RAG) setup",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 0,
    "play_index": 0,
    "filepath": "rag_document_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_result": "task playbook:rag_document_5.yml#play:[0]#task:[0]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Get a list of documents in a Retrieval-Augmented Generation (RAG) setup",
        "register": "get_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "method": "LIST"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Get a list of documents in a Retrieval-Augmented Generation (RAG) setup \n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        method: LIST\n      register: get_result\n",
    "line_num_in_file": [
        14,
        19
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_5.yml#play:[0]#task:[1]",
    "name": "Display the list of RAG documents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 1,
    "play_index": 0,
    "filepath": "rag_document_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the list of RAG documents"
    },
    "module_options": {
        "var": "get_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the list of RAG documents\n      debug:\n        var: get_result.json_payload\n",
    "line_num_in_file": [
        20,
        23
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_5.yml#play:[0]#task:[2]",
    "name": "Get or Retrieve a document by its ID in a Retrieval-Augmented Generation (RAG) setup",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 2,
    "play_index": 0,
    "filepath": "rag_document_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_by_id_result": "task playbook:rag_document_5.yml#play:[0]#task:[2]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Get or Retrieve a document by its ID in a Retrieval-Augmented Generation (RAG) setup",
        "register": "get_by_id_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_document_id": "{{ get_result.json_payload[0].id  }}",
        "method": "GET_BY_ID"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Get or Retrieve a document by its ID in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ get_result.json_payload[0].id  }}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n",
    "line_num_in_file": [
        24,
        30
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_5.yml#play:[0]#task:[3]",
    "name": "Display the RAG document info",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 3,
    "play_index": 0,
    "filepath": "rag_document_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the RAG document info"
    },
    "module_options": {
        "var": "get_by_id_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the RAG document info\n      debug:\n        var: get_by_id_result.json_payload\n\n",
    "line_num_in_file": [
        31,
        35
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_5.yml#play:[0]#task:[4]",
    "name": "Transfer or Submit a document in a Retrieval-Augmented Generation (RAG) setup",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 4,
    "play_index": 0,
    "filepath": "rag_document_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "create_result": "task playbook:rag_document_5.yml#play:[0]#task:[4]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Transfer or Submit a document in a Retrieval-Augmented Generation (RAG) setup",
        "register": "create_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_file_name": "Red_Hat_Partner Training_Portal_User_Guide.pdf",
        "rag_file_url": "http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf",
        "rag_chunk_overlap": 150,
        "rag_chunk_size": 400,
        "rag_keep_files": false,
        "method": "CREATE"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Transfer or Submit a document in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_file_name: Red_Hat_Partner Training_Portal_User_Guide.pdf\n        rag_file_url: http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf\n        rag_chunk_overlap: 150\n        rag_chunk_size: 400\n        rag_keep_files: false\n        method: CREATE\n      register: create_result\n",
    "line_num_in_file": [
        36,
        46
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_5.yml#play:[0]#task:[5]",
    "name": "Display the output of the document ingestion",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 5,
    "play_index": 0,
    "filepath": "rag_document_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of the document ingestion"
    },
    "module_options": {
        "var": "create_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of the document ingestion\n      debug:\n        var: create_result.json_payload\n",
    "line_num_in_file": [
        47,
        50
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_5.yml#play:[0]#task:[6]",
    "name": "",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.pause",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.pause",
        "module.need_correction": true,
        "module.examples": "\n- name: Pause for 5 minutes to build app cache\n  ansible.builtin.pause:\n    minutes: 5\n\n- name: Pause until you can verify updates to an application were successful\n  ansible.builtin.pause:\n\n- name: A helpful reminder of what to look out for post-update\n  ansible.builtin.pause:\n    prompt: \"Make sure org.foo.FooOverload exception is not present\"\n\n- name: Pause to get some sensitive input\n  ansible.builtin.pause:\n    prompt: \"Enter a secret\"\n    echo: no\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "echo",
            "minutes",
            "prompt",
            "seconds"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "pause",
    "index": 6,
    "play_index": 0,
    "filepath": "rag_document_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "my_pause": "task playbook:rag_document_5.yml#play:[0]#task:[6]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "register": "my_pause",
        "delegate_to": "localhost"
    },
    "module_options": {
        "prompt": "Do you want to continue(yes/no)?"
    },
    "executable": "pause",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - pause:\n        prompt: \"Do you want to continue(yes/no)?\"\n      register: my_pause\n      delegate_to: localhost\n\n",
    "line_num_in_file": [
        51,
        56
    ],
    "resolved_name": "ansible.builtin.pause",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "pause",
        "fqcn": "ansible.builtin.pause",
        "key": "module collection:ansible.builtin#module:ansible.builtin.pause"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_5.yml#play:[0]#task:[7]",
    "name": "Remove or Delete a document by its ID in a Retrieval-Augmented Generation (RAG) setup",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 7,
    "play_index": 0,
    "filepath": "rag_document_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "delete_result": "task playbook:rag_document_5.yml#play:[0]#task:[7]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Remove or Delete a document by its ID in a Retrieval-Augmented Generation (RAG) setup",
        "register": "delete_result"
    },
    "module_options": {
        "rag_agent_id": "{{ rag_agent_id }}",
        "rag_document_id": "{{ create_result.json_payload.id }}",
        "method": "DELETE"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Remove or Delete a document by its ID in a Retrieval-Augmented Generation (RAG) setup\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: \"{{ rag_agent_id }}\"\n        rag_document_id: \"{{ create_result.json_payload.id }}\"\n        method: DELETE\n      register: delete_result\n",
    "line_num_in_file": [
        57,
        63
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_5.yml#play:[0]#task:[8]",
    "name": "Display the delete document result",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [
            "rag_agent_id"
        ],
        "variable.unknown_name_vars": [
            "rag_agent_id"
        ]
    },
    "variables": {},
    "module": "debug",
    "index": 8,
    "play_index": 0,
    "filepath": "rag_document_5.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the delete document result"
    },
    "module_options": {
        "var": "delete_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the delete document result\n      debug:\n        var: delete_result.json_payload\n\n\n\n\n",
    "line_num_in_file": [
        64,
        72
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_defaults.yml#play:[0]#task:[0]",
    "name": "Get a list of RAG documents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 0,
    "play_index": 0,
    "filepath": "rag_document_defaults.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_result": "task playbook:rag_document_defaults.yml#play:[0]#task:[0]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Get a list of RAG documents",
        "register": "get_result"
    },
    "module_options": {
        "rag_agent_id": "clxt6tle8000777c1ssbpf9b2",
        "method": "LIST"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Get a list of RAG documents\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: clxt6tle8000777c1ssbpf9b2\n        method: LIST\n      register: get_result\n",
    "line_num_in_file": [
        13,
        18
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_defaults.yml#play:[0]#task:[1]",
    "name": "Display the list of RAG documents",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "debug",
    "index": 1,
    "play_index": 0,
    "filepath": "rag_document_defaults.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the list of RAG documents"
    },
    "module_options": {
        "var": "get_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the list of RAG documents\n      debug:\n        var: get_result.json_payload\n",
    "line_num_in_file": [
        19,
        22
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_defaults.yml#play:[0]#task:[2]",
    "name": "Get a RAG document by its ID",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 2,
    "play_index": 0,
    "filepath": "rag_document_defaults.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "get_by_id_result": "task playbook:rag_document_defaults.yml#play:[0]#task:[2]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Get a RAG document by its ID",
        "register": "get_by_id_result"
    },
    "module_options": {
        "rag_agent_id": "clxt6tle8000777c1ssbpf9b2",
        "rag_document_id": "{{ get_result.json_payload[0].id  }}",
        "method": "GET_BY_ID"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Get a RAG document by its ID\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: clxt6tle8000777c1ssbpf9b2\n        rag_document_id: \"{{ get_result.json_payload[0].id  }}\"\n        method: GET_BY_ID\n      register: get_by_id_result\n",
    "line_num_in_file": [
        23,
        29
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_defaults.yml#play:[0]#task:[3]",
    "name": "Display the RAG document info",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "debug",
    "index": 3,
    "play_index": 0,
    "filepath": "rag_document_defaults.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the RAG document info"
    },
    "module_options": {
        "var": "get_by_id_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the RAG document info\n      debug:\n        var: get_by_id_result.json_payload\n",
    "line_num_in_file": [
        30,
        33
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_defaults.yml#play:[0]#task:[4]",
    "name": "Create a RAG document",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "",
        "module.wrong_module_name": "ibm.ce_emea_rag.rag_document",
        "module.not_exist": true,
        "module.correct_fqcn": "",
        "module.need_correction": true,
        "module.examples": "",
        "variable.undefined_vars": [],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "ibm.ce_emea_rag.rag_document",
    "index": 4,
    "play_index": 0,
    "filepath": "rag_document_defaults.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {
        "create_result": "task playbook:rag_document_defaults.yml#play:[0]#task:[4]"
    },
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Create a RAG document",
        "register": "create_result"
    },
    "module_options": {
        "rag_agent_id": "clxt6tle8000777c1ssbpf9b2",
        "rag_file_name": "Red_Hat_Partner Training_Portal_User_Guide.pdf",
        "rag_file_url": "http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf",
        "rag_chunk_overlap": 150,
        "rag_chunk_size": 400,
        "rag_keep_files": false,
        "method": "CREATE"
    },
    "executable": "ibm.ce_emea_rag.rag_document",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Create a RAG document\n      ibm.ce_emea_rag.rag_document:\n        rag_agent_id: clxt6tle8000777c1ssbpf9b2\n        rag_file_name: Red_Hat_Partner Training_Portal_User_Guide.pdf\n        rag_file_url: http://localhost/pdf/Red_Hat_Partner_Training_Portal_User_Guide.pdf\n        rag_chunk_overlap: 150\n        rag_chunk_size: 400\n        rag_keep_files: false\n        method: CREATE\n      register: create_result\n",
    "line_num_in_file": [
        34,
        44
    ],
    "resolved_name": "",
    "possible_candidates": [],
    "module_info": {},
    "include_info": {}
}
{
    "py/object": "sage_scan.models.Task",
    "type": "task",
    "key": "task playbook:rag_document_defaults.yml#play:[0]#task:[5]",
    "name": "Display the output of Create a RAG agent",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {
        "module.suggested_fqcn": [],
        "module.suggested_dependency": [],
        "module.resolved_fqcn": "ansible.builtin.debug",
        "module.wrong_module_name": "",
        "module.not_exist": false,
        "module.correct_fqcn": "ansible.builtin.debug",
        "module.need_correction": true,
        "module.examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n",
        "module.wrong_arg_keys": [],
        "module.available_arg_keys": [
            "msg",
            "var",
            "verbosity"
        ],
        "module.required_arg_keys": [],
        "module.missing_required_arg_keys": [],
        "module.default_args": {},
        "module.used_alias_and_real_keys": [],
        "module.wrong_arg_values": [],
        "module.undefined_values": [],
        "module.unknown_type_values": [],
        "variable.undefined_vars": [],
        "variable.unknown_name_vars": []
    },
    "variables": {},
    "module": "debug",
    "index": 5,
    "play_index": 0,
    "filepath": "rag_document_defaults.yml",
    "role": "",
    "collection": "",
    "become": null,
    "module_defaults": {},
    "registered_variables": {},
    "set_facts": {},
    "loop": {},
    "options": {
        "name": "Display the output of Create a RAG agent"
    },
    "module_options": {
        "var": "create_result.json_payload"
    },
    "executable": "debug",
    "executable_type": "Module",
    "collections_in_play": [],
    "yaml_lines": "    - name: Display the output of Create a RAG agent\n      debug:\n        var: create_result.json_payload\n\n    # - name: Delete a RAG document by its ID\n    #   ibm.ce_emea_rag.rag_document:\n    #     rag_agent_id: \"clxt6tle8000777c1ssbpf9b2\"\n    #     rag_document_id: \"clxvyxb5c006077c1bw48gknj\"\n    #     method: DELETE\n    #   register: delete_result\n\n    # - name: Display the delete document result\n    #   debug:\n    #     var: delete_result.json_payload\n\n\n\n\n",
    "line_num_in_file": [
        45,
        64
    ],
    "resolved_name": "ansible.builtin.debug",
    "possible_candidates": [],
    "module_info": {
        "collection": "ansible.builtin",
        "short_name": "debug",
        "fqcn": "ansible.builtin.debug",
        "key": "module collection:ansible.builtin#module:ansible.builtin.debug"
    },
    "include_info": {}
}
{
    "py/object": "sage_scan.models.File",
    "type": "file",
    "key": "file file:my_module_defaults.yml",
    "name": "my_module_defaults.yml",
    "source": {
        "data_source_description": "",
        "license": "",
        "repo_name": "examples-custom-specific-api",
        "repo_url": "file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api"
    },
    "source_id": "{\"data_source_description\":\"\",\"license\":\"\",\"repo_name\":\"examples-custom-specific-api\",\"repo_url\":\"file:///Users/livigni/Documents/TNC/WCA4A/clients/CAGIP-Custom/uc4/collections/rag/examples-custom-specific-api\"}",
    "test_object": false,
    "annotations": {},
    "variables": null,
    "role": "",
    "collection": "",
    "body": "  my_module_defaults:\n      rag_api_base_url: \"{{ rag_api_base_url }}\"\n      rag_username_api: \"{{ rag_username_api }}\"\n      rag_password_api: \"{{ rag_password_api }}\"\n      rag_api_key: \"{{ rag_api_key }}\"\n",
    "data": "{\"my_module_defaults\":{\"rag_api_base_url\":\"{{ rag_api_base_url }}\",\"rag_username_api\":\"{{ rag_username_api }}\",\"rag_password_api\":\"{{ rag_password_api }}\",\"rag_api_key\":\"{{ rag_api_key }}\"}}",
    "error": "",
    "label": "others",
    "filepath": "my_module_defaults.yml"
}